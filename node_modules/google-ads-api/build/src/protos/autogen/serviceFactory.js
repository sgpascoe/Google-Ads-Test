"use strict";
/* Autogenerated File! Do Not Edit */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var service_1 = require("../../service");
var index_1 = require("../index");
var ServiceFactory = /** @class */ (function (_super) {
    __extends(ServiceFactory, _super);
    function ServiceFactory(clientOptions, customerOptions, hooks) {
        return _super.call(this, clientOptions, customerOptions, hooks !== null && hooks !== void 0 ? hooks : {}) || this;
    }
    Object.defineProperty(ServiceFactory.prototype, "accessibleBiddingStrategies", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AccessibleBiddingStrategyService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AccessibleBiddingStrategyServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AccessibleBiddingStrategy in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AccessibleBiddingStrategy
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_1;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAccessibleBiddingStrategyRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAccessibleBiddingStrategy(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_1 = _a.sent();
                                throw this.getGoogleAdsError(err_1);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "accountBudgetProposals", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AccountBudgetProposalService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AccountBudgetProposalServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AccountBudgetProposal in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AccountBudgetProposal
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_2;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAccountBudgetProposalRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAccountBudgetProposal(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_2 = _a.sent();
                                throw this.getGoogleAdsError(err_2);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IAccountBudgetProposal
                 * @returns services.MutateAccountBudgetProposalResponse
                 */
                create: function (accountBudgetProposals, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_1, response, mutationResolution_1, err_3, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", accountBudgetProposals);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AccountBudgetProposalService.mutateAccountBudgetProposal",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_1 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_1.cancelled = true;
                                            mutationCancellation_1.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_1.cancelled) {
                                    return [2 /*return*/, mutationCancellation_1.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAccountBudgetProposal(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_1 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_1.resolved = true;
                                            mutationResolution_1.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_1.resolved) {
                                    return [2 /*return*/, mutationResolution_1.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_3 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_3);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAccountBudgetProposalResponse
                 */
                remove: function (accountBudgetProposals, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_2, response, mutationResolution_2, err_4, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", accountBudgetProposals);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AccountBudgetProposalService.mutateAccountBudgetProposal",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_2 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_2.cancelled = true;
                                            mutationCancellation_2.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_2.cancelled) {
                                    return [2 /*return*/, mutationCancellation_2.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAccountBudgetProposal(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_2 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_2.resolved = true;
                                            mutationResolution_2.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_2.resolved) {
                                    return [2 /*return*/, mutationResolution_2.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_4 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_4);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "accountBudgets", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AccountBudgetService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AccountBudgetServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AccountBudget in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AccountBudget
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_5;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAccountBudgetRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAccountBudget(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_5 = _a.sent();
                                throw this.getGoogleAdsError(err_5);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "accountLinks", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AccountLinkService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AccountLinkServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AccountLink in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AccountLink
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_6;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAccountLinkRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAccountLink(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_6 = _a.sent();
                                throw this.getGoogleAdsError(err_6);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AccountLinkService#createaccountlink
                 */
                createAccountLink: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_7;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.createAccountLink(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_7 = _a.sent();
                                throw this.getGoogleAdsError(err_7);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IAccountLink
                 * @returns services.MutateAccountLinkResponse
                 */
                update: function (accountLinks, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_3, response, mutationResolution_3, err_8, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", accountLinks
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.AccountLink);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AccountLinkService.mutateAccountLink",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_3 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_3.cancelled = true;
                                            mutationCancellation_3.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_3.cancelled) {
                                    return [2 /*return*/, mutationCancellation_3.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAccountLink(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_3 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_3.resolved = true;
                                            mutationResolution_3.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_3.resolved) {
                                    return [2 /*return*/, mutationResolution_3.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_8 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_8);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAccountLinkResponse
                 */
                remove: function (accountLinks, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_4, response, mutationResolution_4, err_9, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", accountLinks);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AccountLinkService.mutateAccountLink",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_4 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_4.cancelled = true;
                                            mutationCancellation_4.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_4.cancelled) {
                                    return [2 /*return*/, mutationCancellation_4.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAccountLink(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_4 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_4.resolved = true;
                                            mutationResolution_4.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_4.resolved) {
                                    return [2 /*return*/, mutationResolution_4.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_9 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_9);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "adGroupAdAssetViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdGroupAdAssetViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdGroupAdAssetViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AdGroupAdAssetView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AdGroupAdAssetView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_10;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAdGroupAdAssetViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAdGroupAdAssetView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_10 = _a.sent();
                                throw this.getGoogleAdsError(err_10);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "adGroupAdLabels", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdGroupAdLabelService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdGroupAdLabelServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AdGroupAdLabel in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AdGroupAdLabel
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_11;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAdGroupAdLabelRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAdGroupAdLabel(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_11 = _a.sent();
                                throw this.getGoogleAdsError(err_11);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IAdGroupAdLabel
                 * @returns services.MutateAdGroupAdLabelsResponse
                 */
                create: function (adGroupAdLabels, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_5, response, mutationResolution_5, err_12, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", adGroupAdLabels);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupAdLabelService.mutateAdGroupAdLabels",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_5 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_5.cancelled = true;
                                            mutationCancellation_5.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_5.cancelled) {
                                    return [2 /*return*/, mutationCancellation_5.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupAdLabels(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_5 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_5.resolved = true;
                                            mutationResolution_5.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_5.resolved) {
                                    return [2 /*return*/, mutationResolution_5.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_12 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_12);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAdGroupAdLabelsResponse
                 */
                remove: function (adGroupAdLabels, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_6, response, mutationResolution_6, err_13, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", adGroupAdLabels);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupAdLabelService.mutateAdGroupAdLabels",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_6 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_6.cancelled = true;
                                            mutationCancellation_6.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_6.cancelled) {
                                    return [2 /*return*/, mutationCancellation_6.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupAdLabels(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_6 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_6.resolved = true;
                                            mutationResolution_6.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_6.resolved) {
                                    return [2 /*return*/, mutationResolution_6.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_13 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_13);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "adGroupAds", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdGroupAdService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdGroupAdServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AdGroupAd in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AdGroupAd
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_14;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAdGroupAdRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAdGroupAd(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_14 = _a.sent();
                                throw this.getGoogleAdsError(err_14);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IAdGroupAd
                 * @returns services.MutateAdGroupAdsResponse
                 */
                create: function (adGroupAds, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_7, response, mutationResolution_7, err_15, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", adGroupAds);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupAdService.mutateAdGroupAds",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_7 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_7.cancelled = true;
                                            mutationCancellation_7.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_7.cancelled) {
                                    return [2 /*return*/, mutationCancellation_7.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupAds(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_7 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_7.resolved = true;
                                            mutationResolution_7.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_7.resolved) {
                                    return [2 /*return*/, mutationResolution_7.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_15 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_15);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IAdGroupAd
                 * @returns services.MutateAdGroupAdsResponse
                 */
                update: function (adGroupAds, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_8, response, mutationResolution_8, err_16, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", adGroupAds
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.AdGroupAd);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupAdService.mutateAdGroupAds",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_8 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_8.cancelled = true;
                                            mutationCancellation_8.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_8.cancelled) {
                                    return [2 /*return*/, mutationCancellation_8.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupAds(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_8 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_8.resolved = true;
                                            mutationResolution_8.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_8.resolved) {
                                    return [2 /*return*/, mutationResolution_8.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_16 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_16);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAdGroupAdsResponse
                 */
                remove: function (adGroupAds, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_9, response, mutationResolution_9, err_17, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", adGroupAds);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupAdService.mutateAdGroupAds",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_9 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_9.cancelled = true;
                                            mutationCancellation_9.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_9.cancelled) {
                                    return [2 /*return*/, mutationCancellation_9.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupAds(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_9 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_9.resolved = true;
                                            mutationResolution_9.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_9.resolved) {
                                    return [2 /*return*/, mutationResolution_9.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_17 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_17);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "adGroupAssets", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdGroupAssetService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdGroupAssetServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AdGroupAsset in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AdGroupAsset
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_18;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAdGroupAssetRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAdGroupAsset(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_18 = _a.sent();
                                throw this.getGoogleAdsError(err_18);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IAdGroupAsset
                 * @returns services.MutateAdGroupAssetsResponse
                 */
                create: function (adGroupAssets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_10, response, mutationResolution_10, err_19, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", adGroupAssets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupAssetService.mutateAdGroupAssets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_10 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_10.cancelled = true;
                                            mutationCancellation_10.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_10.cancelled) {
                                    return [2 /*return*/, mutationCancellation_10.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupAssets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_10 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_10.resolved = true;
                                            mutationResolution_10.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_10.resolved) {
                                    return [2 /*return*/, mutationResolution_10.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_19 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_19);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IAdGroupAsset
                 * @returns services.MutateAdGroupAssetsResponse
                 */
                update: function (adGroupAssets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_11, response, mutationResolution_11, err_20, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", adGroupAssets
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.AdGroupAsset);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupAssetService.mutateAdGroupAssets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_11 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_11.cancelled = true;
                                            mutationCancellation_11.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_11.cancelled) {
                                    return [2 /*return*/, mutationCancellation_11.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupAssets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_11 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_11.resolved = true;
                                            mutationResolution_11.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_11.resolved) {
                                    return [2 /*return*/, mutationResolution_11.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_20 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_20);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAdGroupAssetsResponse
                 */
                remove: function (adGroupAssets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_12, response, mutationResolution_12, err_21, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", adGroupAssets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupAssetService.mutateAdGroupAssets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_12 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_12.cancelled = true;
                                            mutationCancellation_12.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_12.cancelled) {
                                    return [2 /*return*/, mutationCancellation_12.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupAssets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_12 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_12.resolved = true;
                                            mutationResolution_12.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_12.resolved) {
                                    return [2 /*return*/, mutationResolution_12.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_21 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_21);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "adGroupAudienceViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdGroupAudienceViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdGroupAudienceViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AdGroupAudienceView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AdGroupAudienceView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_22;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAdGroupAudienceViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAdGroupAudienceView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_22 = _a.sent();
                                throw this.getGoogleAdsError(err_22);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "adGroupBidModifiers", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdGroupBidModifierService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdGroupBidModifierServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AdGroupBidModifier in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AdGroupBidModifier
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_23;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAdGroupBidModifierRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAdGroupBidModifier(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_23 = _a.sent();
                                throw this.getGoogleAdsError(err_23);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IAdGroupBidModifier
                 * @returns services.MutateAdGroupBidModifiersResponse
                 */
                create: function (adGroupBidModifiers, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_13, response, mutationResolution_13, err_24, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", adGroupBidModifiers);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupBidModifierService.mutateAdGroupBidModifiers",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_13 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_13.cancelled = true;
                                            mutationCancellation_13.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_13.cancelled) {
                                    return [2 /*return*/, mutationCancellation_13.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupBidModifiers(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_13 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_13.resolved = true;
                                            mutationResolution_13.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_13.resolved) {
                                    return [2 /*return*/, mutationResolution_13.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_24 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_24);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IAdGroupBidModifier
                 * @returns services.MutateAdGroupBidModifiersResponse
                 */
                update: function (adGroupBidModifiers, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_14, response, mutationResolution_14, err_25, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", adGroupBidModifiers
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.AdGroupBidModifier);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupBidModifierService.mutateAdGroupBidModifiers",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_14 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_14.cancelled = true;
                                            mutationCancellation_14.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_14.cancelled) {
                                    return [2 /*return*/, mutationCancellation_14.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupBidModifiers(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_14 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_14.resolved = true;
                                            mutationResolution_14.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_14.resolved) {
                                    return [2 /*return*/, mutationResolution_14.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_25 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_25);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAdGroupBidModifiersResponse
                 */
                remove: function (adGroupBidModifiers, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_15, response, mutationResolution_15, err_26, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", adGroupBidModifiers);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupBidModifierService.mutateAdGroupBidModifiers",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_15 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_15.cancelled = true;
                                            mutationCancellation_15.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_15.cancelled) {
                                    return [2 /*return*/, mutationCancellation_15.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupBidModifiers(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_15 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_15.resolved = true;
                                            mutationResolution_15.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_15.resolved) {
                                    return [2 /*return*/, mutationResolution_15.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_26 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_26);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "adGroupCriterionCustomizers", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdGroupCriterionCustomizerService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdGroupCriterionCustomizerServiceClient");
            return {
                /**
                 * @description create resources of type resources.IAdGroupCriterionCustomizer
                 * @returns services.MutateAdGroupCriterionCustomizersResponse
                 */
                create: function (adGroupCriterionCustomizers, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_16, response, mutationResolution_16, err_27, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", adGroupCriterionCustomizers);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupCriterionCustomizerService.mutateAdGroupCriterionCustomizers",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_16 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_16.cancelled = true;
                                            mutationCancellation_16.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_16.cancelled) {
                                    return [2 /*return*/, mutationCancellation_16.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupCriterionCustomizers(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_16 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_16.resolved = true;
                                            mutationResolution_16.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_16.resolved) {
                                    return [2 /*return*/, mutationResolution_16.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_27 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_27);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAdGroupCriterionCustomizersResponse
                 */
                remove: function (adGroupCriterionCustomizers, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_17, response, mutationResolution_17, err_28, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", adGroupCriterionCustomizers);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupCriterionCustomizerService.mutateAdGroupCriterionCustomizers",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_17 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_17.cancelled = true;
                                            mutationCancellation_17.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_17.cancelled) {
                                    return [2 /*return*/, mutationCancellation_17.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupCriterionCustomizers(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_17 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_17.resolved = true;
                                            mutationResolution_17.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_17.resolved) {
                                    return [2 /*return*/, mutationResolution_17.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_28 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_28);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "adGroupCriterionLabels", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdGroupCriterionLabelService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdGroupCriterionLabelServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AdGroupCriterionLabel in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AdGroupCriterionLabel
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_29;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAdGroupCriterionLabelRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAdGroupCriterionLabel(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_29 = _a.sent();
                                throw this.getGoogleAdsError(err_29);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IAdGroupCriterionLabel
                 * @returns services.MutateAdGroupCriterionLabelsResponse
                 */
                create: function (adGroupCriterionLabels, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_18, response, mutationResolution_18, err_30, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", adGroupCriterionLabels);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupCriterionLabelService.mutateAdGroupCriterionLabels",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_18 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_18.cancelled = true;
                                            mutationCancellation_18.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_18.cancelled) {
                                    return [2 /*return*/, mutationCancellation_18.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupCriterionLabels(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_18 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_18.resolved = true;
                                            mutationResolution_18.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_18.resolved) {
                                    return [2 /*return*/, mutationResolution_18.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_30 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_30);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAdGroupCriterionLabelsResponse
                 */
                remove: function (adGroupCriterionLabels, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_19, response, mutationResolution_19, err_31, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", adGroupCriterionLabels);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupCriterionLabelService.mutateAdGroupCriterionLabels",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_19 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_19.cancelled = true;
                                            mutationCancellation_19.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_19.cancelled) {
                                    return [2 /*return*/, mutationCancellation_19.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupCriterionLabels(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_19 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_19.resolved = true;
                                            mutationResolution_19.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_19.resolved) {
                                    return [2 /*return*/, mutationResolution_19.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_31 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_31);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "adGroupCriteria", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdGroupCriterionService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdGroupCriterionServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AdGroupCriterion in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AdGroupCriterion
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_32;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAdGroupCriterionRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAdGroupCriterion(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_32 = _a.sent();
                                throw this.getGoogleAdsError(err_32);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IAdGroupCriterion
                 * @returns services.MutateAdGroupCriteriaResponse
                 */
                create: function (adGroupCriteria, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_20, response, mutationResolution_20, err_33, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", adGroupCriteria);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupCriterionService.mutateAdGroupCriteria",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_20 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_20.cancelled = true;
                                            mutationCancellation_20.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_20.cancelled) {
                                    return [2 /*return*/, mutationCancellation_20.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupCriteria(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_20 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_20.resolved = true;
                                            mutationResolution_20.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_20.resolved) {
                                    return [2 /*return*/, mutationResolution_20.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_33 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_33);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IAdGroupCriterion
                 * @returns services.MutateAdGroupCriteriaResponse
                 */
                update: function (adGroupCriteria, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_21, response, mutationResolution_21, err_34, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", adGroupCriteria
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.AdGroupCriterion);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupCriterionService.mutateAdGroupCriteria",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_21 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_21.cancelled = true;
                                            mutationCancellation_21.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_21.cancelled) {
                                    return [2 /*return*/, mutationCancellation_21.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupCriteria(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_21 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_21.resolved = true;
                                            mutationResolution_21.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_21.resolved) {
                                    return [2 /*return*/, mutationResolution_21.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_34 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_34);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAdGroupCriteriaResponse
                 */
                remove: function (adGroupCriteria, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_22, response, mutationResolution_22, err_35, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", adGroupCriteria);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupCriterionService.mutateAdGroupCriteria",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_22 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_22.cancelled = true;
                                            mutationCancellation_22.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_22.cancelled) {
                                    return [2 /*return*/, mutationCancellation_22.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupCriteria(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_22 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_22.resolved = true;
                                            mutationResolution_22.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_22.resolved) {
                                    return [2 /*return*/, mutationResolution_22.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_35 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_35);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "adGroupCriterionSimulations", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdGroupCriterionSimulationService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdGroupCriterionSimulationServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AdGroupCriterionSimulation in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AdGroupCriterionSimulation
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_36;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAdGroupCriterionSimulationRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAdGroupCriterionSimulation(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_36 = _a.sent();
                                throw this.getGoogleAdsError(err_36);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "adGroupCustomizers", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdGroupCustomizerService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdGroupCustomizerServiceClient");
            return {
                /**
                 * @description create resources of type resources.IAdGroupCustomizer
                 * @returns services.MutateAdGroupCustomizersResponse
                 */
                create: function (adGroupCustomizers, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_23, response, mutationResolution_23, err_37, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", adGroupCustomizers);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupCustomizerService.mutateAdGroupCustomizers",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_23 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_23.cancelled = true;
                                            mutationCancellation_23.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_23.cancelled) {
                                    return [2 /*return*/, mutationCancellation_23.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupCustomizers(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_23 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_23.resolved = true;
                                            mutationResolution_23.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_23.resolved) {
                                    return [2 /*return*/, mutationResolution_23.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_37 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_37);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAdGroupCustomizersResponse
                 */
                remove: function (adGroupCustomizers, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_24, response, mutationResolution_24, err_38, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", adGroupCustomizers);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupCustomizerService.mutateAdGroupCustomizers",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_24 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_24.cancelled = true;
                                            mutationCancellation_24.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_24.cancelled) {
                                    return [2 /*return*/, mutationCancellation_24.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupCustomizers(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_24 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_24.resolved = true;
                                            mutationResolution_24.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_24.resolved) {
                                    return [2 /*return*/, mutationResolution_24.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_38 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_38);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "adGroupExtensionSettings", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdGroupExtensionSettingService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdGroupExtensionSettingServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AdGroupExtensionSetting in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AdGroupExtensionSetting
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_39;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAdGroupExtensionSettingRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAdGroupExtensionSetting(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_39 = _a.sent();
                                throw this.getGoogleAdsError(err_39);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IAdGroupExtensionSetting
                 * @returns services.MutateAdGroupExtensionSettingsResponse
                 */
                create: function (adGroupExtensionSettings, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_25, response, mutationResolution_25, err_40, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", adGroupExtensionSettings);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupExtensionSettingService.mutateAdGroupExtensionSettings",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_25 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_25.cancelled = true;
                                            mutationCancellation_25.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_25.cancelled) {
                                    return [2 /*return*/, mutationCancellation_25.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupExtensionSettings(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_25 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_25.resolved = true;
                                            mutationResolution_25.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_25.resolved) {
                                    return [2 /*return*/, mutationResolution_25.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_40 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_40);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IAdGroupExtensionSetting
                 * @returns services.MutateAdGroupExtensionSettingsResponse
                 */
                update: function (adGroupExtensionSettings, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_26, response, mutationResolution_26, err_41, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", adGroupExtensionSettings
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.AdGroupExtensionSetting);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupExtensionSettingService.mutateAdGroupExtensionSettings",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_26 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_26.cancelled = true;
                                            mutationCancellation_26.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_26.cancelled) {
                                    return [2 /*return*/, mutationCancellation_26.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupExtensionSettings(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_26 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_26.resolved = true;
                                            mutationResolution_26.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_26.resolved) {
                                    return [2 /*return*/, mutationResolution_26.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_41 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_41);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAdGroupExtensionSettingsResponse
                 */
                remove: function (adGroupExtensionSettings, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_27, response, mutationResolution_27, err_42, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", adGroupExtensionSettings);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupExtensionSettingService.mutateAdGroupExtensionSettings",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_27 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_27.cancelled = true;
                                            mutationCancellation_27.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_27.cancelled) {
                                    return [2 /*return*/, mutationCancellation_27.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupExtensionSettings(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_27 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_27.resolved = true;
                                            mutationResolution_27.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_27.resolved) {
                                    return [2 /*return*/, mutationResolution_27.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_42 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_42);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "adGroupFeeds", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdGroupFeedService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdGroupFeedServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AdGroupFeed in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AdGroupFeed
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_43;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAdGroupFeedRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAdGroupFeed(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_43 = _a.sent();
                                throw this.getGoogleAdsError(err_43);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IAdGroupFeed
                 * @returns services.MutateAdGroupFeedsResponse
                 */
                create: function (adGroupFeeds, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_28, response, mutationResolution_28, err_44, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", adGroupFeeds);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupFeedService.mutateAdGroupFeeds",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_28 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_28.cancelled = true;
                                            mutationCancellation_28.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_28.cancelled) {
                                    return [2 /*return*/, mutationCancellation_28.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupFeeds(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_28 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_28.resolved = true;
                                            mutationResolution_28.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_28.resolved) {
                                    return [2 /*return*/, mutationResolution_28.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_44 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_44);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IAdGroupFeed
                 * @returns services.MutateAdGroupFeedsResponse
                 */
                update: function (adGroupFeeds, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_29, response, mutationResolution_29, err_45, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", adGroupFeeds
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.AdGroupFeed);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupFeedService.mutateAdGroupFeeds",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_29 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_29.cancelled = true;
                                            mutationCancellation_29.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_29.cancelled) {
                                    return [2 /*return*/, mutationCancellation_29.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupFeeds(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_29 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_29.resolved = true;
                                            mutationResolution_29.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_29.resolved) {
                                    return [2 /*return*/, mutationResolution_29.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_45 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_45);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAdGroupFeedsResponse
                 */
                remove: function (adGroupFeeds, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_30, response, mutationResolution_30, err_46, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", adGroupFeeds);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupFeedService.mutateAdGroupFeeds",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_30 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_30.cancelled = true;
                                            mutationCancellation_30.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_30.cancelled) {
                                    return [2 /*return*/, mutationCancellation_30.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupFeeds(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_30 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_30.resolved = true;
                                            mutationResolution_30.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_30.resolved) {
                                    return [2 /*return*/, mutationResolution_30.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_46 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_46);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "adGroupLabels", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdGroupLabelService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdGroupLabelServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AdGroupLabel in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AdGroupLabel
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_47;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAdGroupLabelRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAdGroupLabel(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_47 = _a.sent();
                                throw this.getGoogleAdsError(err_47);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IAdGroupLabel
                 * @returns services.MutateAdGroupLabelsResponse
                 */
                create: function (adGroupLabels, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_31, response, mutationResolution_31, err_48, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", adGroupLabels);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupLabelService.mutateAdGroupLabels",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_31 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_31.cancelled = true;
                                            mutationCancellation_31.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_31.cancelled) {
                                    return [2 /*return*/, mutationCancellation_31.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupLabels(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_31 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_31.resolved = true;
                                            mutationResolution_31.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_31.resolved) {
                                    return [2 /*return*/, mutationResolution_31.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_48 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_48);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAdGroupLabelsResponse
                 */
                remove: function (adGroupLabels, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_32, response, mutationResolution_32, err_49, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", adGroupLabels);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupLabelService.mutateAdGroupLabels",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_32 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_32.cancelled = true;
                                            mutationCancellation_32.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_32.cancelled) {
                                    return [2 /*return*/, mutationCancellation_32.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroupLabels(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_32 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_32.resolved = true;
                                            mutationResolution_32.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_32.resolved) {
                                    return [2 /*return*/, mutationResolution_32.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_49 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_49);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "adGroups", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdGroupService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdGroupServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AdGroup in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AdGroup
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_50;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAdGroupRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAdGroup(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_50 = _a.sent();
                                throw this.getGoogleAdsError(err_50);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IAdGroup
                 * @returns services.MutateAdGroupsResponse
                 */
                create: function (adGroups, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_33, response, mutationResolution_33, err_51, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", adGroups);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupService.mutateAdGroups",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_33 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_33.cancelled = true;
                                            mutationCancellation_33.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_33.cancelled) {
                                    return [2 /*return*/, mutationCancellation_33.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroups(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_33 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_33.resolved = true;
                                            mutationResolution_33.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_33.resolved) {
                                    return [2 /*return*/, mutationResolution_33.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_51 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_51);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IAdGroup
                 * @returns services.MutateAdGroupsResponse
                 */
                update: function (adGroups, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_34, response, mutationResolution_34, err_52, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", adGroups
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.AdGroup);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupService.mutateAdGroups",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_34 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_34.cancelled = true;
                                            mutationCancellation_34.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_34.cancelled) {
                                    return [2 /*return*/, mutationCancellation_34.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroups(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_34 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_34.resolved = true;
                                            mutationResolution_34.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_34.resolved) {
                                    return [2 /*return*/, mutationResolution_34.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_52 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_52);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAdGroupsResponse
                 */
                remove: function (adGroups, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_35, response, mutationResolution_35, err_53, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", adGroups);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdGroupService.mutateAdGroups",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_35 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_35.cancelled = true;
                                            mutationCancellation_35.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_35.cancelled) {
                                    return [2 /*return*/, mutationCancellation_35.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdGroups(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_35 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_35.resolved = true;
                                            mutationResolution_35.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_35.resolved) {
                                    return [2 /*return*/, mutationResolution_35.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_53 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_53);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "adGroupSimulations", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdGroupSimulationService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdGroupSimulationServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AdGroupSimulation in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AdGroupSimulation
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_54;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAdGroupSimulationRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAdGroupSimulation(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_54 = _a.sent();
                                throw this.getGoogleAdsError(err_54);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "adParameters", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdParameterService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdParameterServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AdParameter in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AdParameter
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_55;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAdParameterRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAdParameter(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_55 = _a.sent();
                                throw this.getGoogleAdsError(err_55);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IAdParameter
                 * @returns services.MutateAdParametersResponse
                 */
                create: function (adParameters, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_36, response, mutationResolution_36, err_56, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", adParameters);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdParameterService.mutateAdParameters",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_36 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_36.cancelled = true;
                                            mutationCancellation_36.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_36.cancelled) {
                                    return [2 /*return*/, mutationCancellation_36.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdParameters(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_36 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_36.resolved = true;
                                            mutationResolution_36.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_36.resolved) {
                                    return [2 /*return*/, mutationResolution_36.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_56 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_56);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IAdParameter
                 * @returns services.MutateAdParametersResponse
                 */
                update: function (adParameters, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_37, response, mutationResolution_37, err_57, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", adParameters
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.AdParameter);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdParameterService.mutateAdParameters",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_37 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_37.cancelled = true;
                                            mutationCancellation_37.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_37.cancelled) {
                                    return [2 /*return*/, mutationCancellation_37.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdParameters(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_37 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_37.resolved = true;
                                            mutationResolution_37.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_37.resolved) {
                                    return [2 /*return*/, mutationResolution_37.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_57 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_57);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAdParametersResponse
                 */
                remove: function (adParameters, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_38, response, mutationResolution_38, err_58, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", adParameters);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdParameterService.mutateAdParameters",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_38 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_38.cancelled = true;
                                            mutationCancellation_38.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_38.cancelled) {
                                    return [2 /*return*/, mutationCancellation_38.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAdParameters(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_38 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_38.resolved = true;
                                            mutationResolution_38.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_38.resolved) {
                                    return [2 /*return*/, mutationResolution_38.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_58 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_58);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "adScheduleViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdScheduleViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdScheduleViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AdScheduleView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AdScheduleView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_59;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAdScheduleViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAdScheduleView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_59 = _a.sent();
                                throw this.getGoogleAdsError(err_59);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "ads", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AdService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AdServiceClient");
            return {
                /**
                 * @description Retrieve a resources.Ad in full detail
                 * @warning Don't use get in production!
                 * @returns resources.Ad
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_60;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAdRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAd(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_60 = _a.sent();
                                throw this.getGoogleAdsError(err_60);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IAd
                 * @returns services.MutateAdsResponse
                 */
                update: function (ads, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_39, response, mutationResolution_39, err_61, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", ads
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.Ad);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AdService.mutateAds",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_39 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_39.cancelled = true;
                                            mutationCancellation_39.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_39.cancelled) {
                                    return [2 /*return*/, mutationCancellation_39.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAds(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_39 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_39.resolved = true;
                                            mutationResolution_39.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_39.resolved) {
                                    return [2 /*return*/, mutationResolution_39.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_61 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_61);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "ageRangeViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AgeRangeViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AgeRangeViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AgeRangeView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AgeRangeView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_62;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAgeRangeViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAgeRangeView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_62 = _a.sent();
                                throw this.getGoogleAdsError(err_62);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "assetFieldTypeViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AssetFieldTypeViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AssetFieldTypeViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AssetFieldTypeView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AssetFieldTypeView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_63;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAssetFieldTypeViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAssetFieldTypeView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_63 = _a.sent();
                                throw this.getGoogleAdsError(err_63);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "assetGroupAssets", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AssetGroupAssetService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AssetGroupAssetServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AssetGroupAsset in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AssetGroupAsset
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_64;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAssetGroupAssetRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAssetGroupAsset(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_64 = _a.sent();
                                throw this.getGoogleAdsError(err_64);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IAssetGroupAsset
                 * @returns services.MutateAssetGroupAssetsResponse
                 */
                create: function (assetGroupAssets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_40, response, mutationResolution_40, err_65, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", assetGroupAssets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AssetGroupAssetService.mutateAssetGroupAssets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_40 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_40.cancelled = true;
                                            mutationCancellation_40.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_40.cancelled) {
                                    return [2 /*return*/, mutationCancellation_40.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAssetGroupAssets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_40 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_40.resolved = true;
                                            mutationResolution_40.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_40.resolved) {
                                    return [2 /*return*/, mutationResolution_40.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_65 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_65);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IAssetGroupAsset
                 * @returns services.MutateAssetGroupAssetsResponse
                 */
                update: function (assetGroupAssets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_41, response, mutationResolution_41, err_66, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", assetGroupAssets
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.AssetGroupAsset);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AssetGroupAssetService.mutateAssetGroupAssets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_41 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_41.cancelled = true;
                                            mutationCancellation_41.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_41.cancelled) {
                                    return [2 /*return*/, mutationCancellation_41.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAssetGroupAssets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_41 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_41.resolved = true;
                                            mutationResolution_41.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_41.resolved) {
                                    return [2 /*return*/, mutationResolution_41.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_66 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_66);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAssetGroupAssetsResponse
                 */
                remove: function (assetGroupAssets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_42, response, mutationResolution_42, err_67, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", assetGroupAssets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AssetGroupAssetService.mutateAssetGroupAssets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_42 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_42.cancelled = true;
                                            mutationCancellation_42.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_42.cancelled) {
                                    return [2 /*return*/, mutationCancellation_42.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAssetGroupAssets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_42 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_42.resolved = true;
                                            mutationResolution_42.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_42.resolved) {
                                    return [2 /*return*/, mutationResolution_42.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_67 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_67);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "assetGroupListingGroupFilters", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AssetGroupListingGroupFilterService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AssetGroupListingGroupFilterServiceClient");
            return {
                /**
                 * @description create resources of type resources.IAssetGroupListingGroupFilter
                 * @returns services.MutateAssetGroupListingGroupFiltersResponse
                 */
                create: function (assetGroupListingGroupFilters, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_43, response, mutationResolution_43, err_68, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", assetGroupListingGroupFilters);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AssetGroupListingGroupFilterService.mutateAssetGroupListingGroupFilters",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_43 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_43.cancelled = true;
                                            mutationCancellation_43.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_43.cancelled) {
                                    return [2 /*return*/, mutationCancellation_43.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAssetGroupListingGroupFilters(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_43 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_43.resolved = true;
                                            mutationResolution_43.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_43.resolved) {
                                    return [2 /*return*/, mutationResolution_43.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_68 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_68);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IAssetGroupListingGroupFilter
                 * @returns services.MutateAssetGroupListingGroupFiltersResponse
                 */
                update: function (assetGroupListingGroupFilters, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_44, response, mutationResolution_44, err_69, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", assetGroupListingGroupFilters
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.AssetGroupListingGroupFilter);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AssetGroupListingGroupFilterService.mutateAssetGroupListingGroupFilters",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_44 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_44.cancelled = true;
                                            mutationCancellation_44.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_44.cancelled) {
                                    return [2 /*return*/, mutationCancellation_44.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAssetGroupListingGroupFilters(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_44 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_44.resolved = true;
                                            mutationResolution_44.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_44.resolved) {
                                    return [2 /*return*/, mutationResolution_44.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_69 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_69);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAssetGroupListingGroupFiltersResponse
                 */
                remove: function (assetGroupListingGroupFilters, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_45, response, mutationResolution_45, err_70, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", assetGroupListingGroupFilters);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AssetGroupListingGroupFilterService.mutateAssetGroupListingGroupFilters",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_45 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_45.cancelled = true;
                                            mutationCancellation_45.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_45.cancelled) {
                                    return [2 /*return*/, mutationCancellation_45.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAssetGroupListingGroupFilters(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_45 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_45.resolved = true;
                                            mutationResolution_45.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_45.resolved) {
                                    return [2 /*return*/, mutationResolution_45.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_70 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_70);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "assetGroups", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AssetGroupService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AssetGroupServiceClient");
            return {
                /**
                 * @description Retrieve a resources.AssetGroup in full detail
                 * @warning Don't use get in production!
                 * @returns resources.AssetGroup
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_71;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAssetGroupRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAssetGroup(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_71 = _a.sent();
                                throw this.getGoogleAdsError(err_71);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IAssetGroup
                 * @returns services.MutateAssetGroupsResponse
                 */
                create: function (assetGroups, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_46, response, mutationResolution_46, err_72, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", assetGroups);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AssetGroupService.mutateAssetGroups",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_46 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_46.cancelled = true;
                                            mutationCancellation_46.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_46.cancelled) {
                                    return [2 /*return*/, mutationCancellation_46.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAssetGroups(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_46 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_46.resolved = true;
                                            mutationResolution_46.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_46.resolved) {
                                    return [2 /*return*/, mutationResolution_46.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_72 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_72);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IAssetGroup
                 * @returns services.MutateAssetGroupsResponse
                 */
                update: function (assetGroups, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_47, response, mutationResolution_47, err_73, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", assetGroups
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.AssetGroup);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AssetGroupService.mutateAssetGroups",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_47 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_47.cancelled = true;
                                            mutationCancellation_47.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_47.cancelled) {
                                    return [2 /*return*/, mutationCancellation_47.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAssetGroups(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_47 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_47.resolved = true;
                                            mutationResolution_47.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_47.resolved) {
                                    return [2 /*return*/, mutationResolution_47.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_73 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_73);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAssetGroupsResponse
                 */
                remove: function (assetGroups, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_48, response, mutationResolution_48, err_74, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", assetGroups);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AssetGroupService.mutateAssetGroups",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_48 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_48.cancelled = true;
                                            mutationCancellation_48.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_48.cancelled) {
                                    return [2 /*return*/, mutationCancellation_48.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAssetGroups(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_48 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_48.resolved = true;
                                            mutationResolution_48.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_48.resolved) {
                                    return [2 /*return*/, mutationResolution_48.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_74 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_74);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "assets", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AssetService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AssetServiceClient");
            return {
                /**
                 * @description Retrieve a resources.Asset in full detail
                 * @warning Don't use get in production!
                 * @returns resources.Asset
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_75;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetAssetRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getAsset(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_75 = _a.sent();
                                throw this.getGoogleAdsError(err_75);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IAsset
                 * @returns services.MutateAssetsResponse
                 */
                create: function (assets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_49, response, mutationResolution_49, err_76, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", assets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AssetService.mutateAssets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_49 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_49.cancelled = true;
                                            mutationCancellation_49.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_49.cancelled) {
                                    return [2 /*return*/, mutationCancellation_49.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAssets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_49 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_49.resolved = true;
                                            mutationResolution_49.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_49.resolved) {
                                    return [2 /*return*/, mutationResolution_49.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_76 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_76);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IAsset
                 * @returns services.MutateAssetsResponse
                 */
                update: function (assets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_50, response, mutationResolution_50, err_77, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", assets
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.Asset);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AssetService.mutateAssets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_50 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_50.cancelled = true;
                                            mutationCancellation_50.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_50.cancelled) {
                                    return [2 /*return*/, mutationCancellation_50.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAssets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_50 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_50.resolved = true;
                                            mutationResolution_50.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_50.resolved) {
                                    return [2 /*return*/, mutationResolution_50.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_77 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_77);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "assetSetAssets", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AssetSetAssetService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AssetSetAssetServiceClient");
            return {
                /**
                 * @description create resources of type resources.IAssetSetAsset
                 * @returns services.MutateAssetSetAssetsResponse
                 */
                create: function (assetSetAssets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_51, response, mutationResolution_51, err_78, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", assetSetAssets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AssetSetAssetService.mutateAssetSetAssets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_51 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_51.cancelled = true;
                                            mutationCancellation_51.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_51.cancelled) {
                                    return [2 /*return*/, mutationCancellation_51.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAssetSetAssets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_51 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_51.resolved = true;
                                            mutationResolution_51.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_51.resolved) {
                                    return [2 /*return*/, mutationResolution_51.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_78 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_78);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAssetSetAssetsResponse
                 */
                remove: function (assetSetAssets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_52, response, mutationResolution_52, err_79, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", assetSetAssets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AssetSetAssetService.mutateAssetSetAssets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_52 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_52.cancelled = true;
                                            mutationCancellation_52.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_52.cancelled) {
                                    return [2 /*return*/, mutationCancellation_52.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAssetSetAssets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_52 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_52.resolved = true;
                                            mutationResolution_52.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_52.resolved) {
                                    return [2 /*return*/, mutationResolution_52.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_79 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_79);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "assetSets", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/AssetSetService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("AssetSetServiceClient");
            return {
                /**
                 * @description create resources of type resources.IAssetSet
                 * @returns services.MutateAssetSetsResponse
                 */
                create: function (assetSets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_53, response, mutationResolution_53, err_80, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", assetSets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AssetSetService.mutateAssetSets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_53 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_53.cancelled = true;
                                            mutationCancellation_53.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_53.cancelled) {
                                    return [2 /*return*/, mutationCancellation_53.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAssetSets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_53 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_53.resolved = true;
                                            mutationResolution_53.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_53.resolved) {
                                    return [2 /*return*/, mutationResolution_53.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_80 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_80);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IAssetSet
                 * @returns services.MutateAssetSetsResponse
                 */
                update: function (assetSets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_54, response, mutationResolution_54, err_81, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", assetSets
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.AssetSet);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AssetSetService.mutateAssetSets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_54 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_54.cancelled = true;
                                            mutationCancellation_54.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_54.cancelled) {
                                    return [2 /*return*/, mutationCancellation_54.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAssetSets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_54 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_54.resolved = true;
                                            mutationResolution_54.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_54.resolved) {
                                    return [2 /*return*/, mutationResolution_54.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_81 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_81);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateAssetSetsResponse
                 */
                remove: function (assetSets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_55, response, mutationResolution_55, err_82, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", assetSets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "AssetSetService.mutateAssetSets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_55 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_55.cancelled = true;
                                            mutationCancellation_55.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_55.cancelled) {
                                    return [2 /*return*/, mutationCancellation_55.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateAssetSets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_55 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_55.resolved = true;
                                            mutationResolution_55.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_55.resolved) {
                                    return [2 /*return*/, mutationResolution_55.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_82 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_82);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "batchJobs", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/BatchJobService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("BatchJobServiceClient");
            return {
                /**
                 * @description create resources of type resources.IBatchJob
                 * @returns services.MutateBatchJobResponse
                 */
                create: function (batchJobs, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_56, response, mutationResolution_56, err_83, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", batchJobs);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "BatchJobService.mutateBatchJob",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_56 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_56.cancelled = true;
                                            mutationCancellation_56.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_56.cancelled) {
                                    return [2 /*return*/, mutationCancellation_56.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateBatchJob(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_56 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_56.resolved = true;
                                            mutationResolution_56.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_56.resolved) {
                                    return [2 /*return*/, mutationResolution_56.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_83 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_83);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description Retrieve a resources.BatchJob in full detail
                 * @warning Don't use get in production!
                 * @returns resources.BatchJob
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_84;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetBatchJobRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getBatchJob(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_84 = _a.sent();
                                throw this.getGoogleAdsError(err_84);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/BatchJobService#listbatchjobresults
                 */
                listBatchJobResults: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_85;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.listBatchJobResults(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_85 = _a.sent();
                                throw this.getGoogleAdsError(err_85);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/BatchJobService#runbatchjob
                 */
                runBatchJob: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_86;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.runBatchJob(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_86 = _a.sent();
                                throw this.getGoogleAdsError(err_86);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/BatchJobService#addbatchjoboperations
                 */
                addBatchJobOperations: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_87;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.addBatchJobOperations(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_87 = _a.sent();
                                throw this.getGoogleAdsError(err_87);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "biddingDataExclusions", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/BiddingDataExclusionService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("BiddingDataExclusionServiceClient");
            return {
                /**
                 * @description Retrieve a resources.BiddingDataExclusion in full detail
                 * @warning Don't use get in production!
                 * @returns resources.BiddingDataExclusion
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_88;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetBiddingDataExclusionRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getBiddingDataExclusion(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_88 = _a.sent();
                                throw this.getGoogleAdsError(err_88);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IBiddingDataExclusion
                 * @returns services.MutateBiddingDataExclusionsResponse
                 */
                create: function (biddingDataExclusions, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_57, response, mutationResolution_57, err_89, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", biddingDataExclusions);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "BiddingDataExclusionService.mutateBiddingDataExclusions",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_57 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_57.cancelled = true;
                                            mutationCancellation_57.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_57.cancelled) {
                                    return [2 /*return*/, mutationCancellation_57.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateBiddingDataExclusions(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_57 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_57.resolved = true;
                                            mutationResolution_57.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_57.resolved) {
                                    return [2 /*return*/, mutationResolution_57.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_89 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_89);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IBiddingDataExclusion
                 * @returns services.MutateBiddingDataExclusionsResponse
                 */
                update: function (biddingDataExclusions, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_58, response, mutationResolution_58, err_90, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", biddingDataExclusions
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.BiddingDataExclusion);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "BiddingDataExclusionService.mutateBiddingDataExclusions",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_58 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_58.cancelled = true;
                                            mutationCancellation_58.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_58.cancelled) {
                                    return [2 /*return*/, mutationCancellation_58.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateBiddingDataExclusions(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_58 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_58.resolved = true;
                                            mutationResolution_58.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_58.resolved) {
                                    return [2 /*return*/, mutationResolution_58.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_90 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_90);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateBiddingDataExclusionsResponse
                 */
                remove: function (biddingDataExclusions, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_59, response, mutationResolution_59, err_91, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", biddingDataExclusions);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "BiddingDataExclusionService.mutateBiddingDataExclusions",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_59 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_59.cancelled = true;
                                            mutationCancellation_59.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_59.cancelled) {
                                    return [2 /*return*/, mutationCancellation_59.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateBiddingDataExclusions(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_59 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_59.resolved = true;
                                            mutationResolution_59.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_59.resolved) {
                                    return [2 /*return*/, mutationResolution_59.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_91 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_91);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "biddingSeasonalityAdjustments", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/BiddingSeasonalityAdjustmentService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("BiddingSeasonalityAdjustmentServiceClient");
            return {
                /**
                 * @description Retrieve a resources.BiddingSeasonalityAdjustment in full detail
                 * @warning Don't use get in production!
                 * @returns resources.BiddingSeasonalityAdjustment
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_92;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetBiddingSeasonalityAdjustmentRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getBiddingSeasonalityAdjustment(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_92 = _a.sent();
                                throw this.getGoogleAdsError(err_92);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IBiddingSeasonalityAdjustment
                 * @returns services.MutateBiddingSeasonalityAdjustmentsResponse
                 */
                create: function (biddingSeasonalityAdjustments, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_60, response, mutationResolution_60, err_93, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", biddingSeasonalityAdjustments);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "BiddingSeasonalityAdjustmentService.mutateBiddingSeasonalityAdjustments",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_60 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_60.cancelled = true;
                                            mutationCancellation_60.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_60.cancelled) {
                                    return [2 /*return*/, mutationCancellation_60.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateBiddingSeasonalityAdjustments(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_60 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_60.resolved = true;
                                            mutationResolution_60.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_60.resolved) {
                                    return [2 /*return*/, mutationResolution_60.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_93 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_93);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IBiddingSeasonalityAdjustment
                 * @returns services.MutateBiddingSeasonalityAdjustmentsResponse
                 */
                update: function (biddingSeasonalityAdjustments, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_61, response, mutationResolution_61, err_94, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", biddingSeasonalityAdjustments
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.BiddingSeasonalityAdjustment);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "BiddingSeasonalityAdjustmentService.mutateBiddingSeasonalityAdjustments",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_61 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_61.cancelled = true;
                                            mutationCancellation_61.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_61.cancelled) {
                                    return [2 /*return*/, mutationCancellation_61.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateBiddingSeasonalityAdjustments(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_61 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_61.resolved = true;
                                            mutationResolution_61.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_61.resolved) {
                                    return [2 /*return*/, mutationResolution_61.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_94 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_94);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateBiddingSeasonalityAdjustmentsResponse
                 */
                remove: function (biddingSeasonalityAdjustments, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_62, response, mutationResolution_62, err_95, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", biddingSeasonalityAdjustments);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "BiddingSeasonalityAdjustmentService.mutateBiddingSeasonalityAdjustments",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_62 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_62.cancelled = true;
                                            mutationCancellation_62.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_62.cancelled) {
                                    return [2 /*return*/, mutationCancellation_62.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateBiddingSeasonalityAdjustments(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_62 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_62.resolved = true;
                                            mutationResolution_62.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_62.resolved) {
                                    return [2 /*return*/, mutationResolution_62.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_95 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_95);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "biddingStrategies", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/BiddingStrategyService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("BiddingStrategyServiceClient");
            return {
                /**
                 * @description Retrieve a resources.BiddingStrategy in full detail
                 * @warning Don't use get in production!
                 * @returns resources.BiddingStrategy
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_96;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetBiddingStrategyRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getBiddingStrategy(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_96 = _a.sent();
                                throw this.getGoogleAdsError(err_96);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IBiddingStrategy
                 * @returns services.MutateBiddingStrategiesResponse
                 */
                create: function (biddingStrategies, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_63, response, mutationResolution_63, err_97, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", biddingStrategies);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "BiddingStrategyService.mutateBiddingStrategies",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_63 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_63.cancelled = true;
                                            mutationCancellation_63.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_63.cancelled) {
                                    return [2 /*return*/, mutationCancellation_63.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateBiddingStrategies(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_63 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_63.resolved = true;
                                            mutationResolution_63.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_63.resolved) {
                                    return [2 /*return*/, mutationResolution_63.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_97 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_97);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IBiddingStrategy
                 * @returns services.MutateBiddingStrategiesResponse
                 */
                update: function (biddingStrategies, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_64, response, mutationResolution_64, err_98, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", biddingStrategies
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.BiddingStrategy);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "BiddingStrategyService.mutateBiddingStrategies",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_64 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_64.cancelled = true;
                                            mutationCancellation_64.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_64.cancelled) {
                                    return [2 /*return*/, mutationCancellation_64.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateBiddingStrategies(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_64 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_64.resolved = true;
                                            mutationResolution_64.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_64.resolved) {
                                    return [2 /*return*/, mutationResolution_64.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_98 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_98);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateBiddingStrategiesResponse
                 */
                remove: function (biddingStrategies, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_65, response, mutationResolution_65, err_99, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", biddingStrategies);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "BiddingStrategyService.mutateBiddingStrategies",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_65 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_65.cancelled = true;
                                            mutationCancellation_65.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_65.cancelled) {
                                    return [2 /*return*/, mutationCancellation_65.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateBiddingStrategies(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_65 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_65.resolved = true;
                                            mutationResolution_65.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_65.resolved) {
                                    return [2 /*return*/, mutationResolution_65.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_99 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_99);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "campaignAssets", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignAssetService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CampaignAssetServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CampaignAsset in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CampaignAsset
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_100;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCampaignAssetRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCampaignAsset(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_100 = _a.sent();
                                throw this.getGoogleAdsError(err_100);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICampaignAsset
                 * @returns services.MutateCampaignAssetsResponse
                 */
                create: function (campaignAssets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_66, response, mutationResolution_66, err_101, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", campaignAssets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignAssetService.mutateCampaignAssets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_66 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_66.cancelled = true;
                                            mutationCancellation_66.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_66.cancelled) {
                                    return [2 /*return*/, mutationCancellation_66.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignAssets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_66 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_66.resolved = true;
                                            mutationResolution_66.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_66.resolved) {
                                    return [2 /*return*/, mutationResolution_66.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_101 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_101);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICampaignAsset
                 * @returns services.MutateCampaignAssetsResponse
                 */
                update: function (campaignAssets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_67, response, mutationResolution_67, err_102, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", campaignAssets
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CampaignAsset);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignAssetService.mutateCampaignAssets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_67 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_67.cancelled = true;
                                            mutationCancellation_67.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_67.cancelled) {
                                    return [2 /*return*/, mutationCancellation_67.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignAssets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_67 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_67.resolved = true;
                                            mutationResolution_67.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_67.resolved) {
                                    return [2 /*return*/, mutationResolution_67.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_102 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_102);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCampaignAssetsResponse
                 */
                remove: function (campaignAssets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_68, response, mutationResolution_68, err_103, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", campaignAssets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignAssetService.mutateCampaignAssets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_68 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_68.cancelled = true;
                                            mutationCancellation_68.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_68.cancelled) {
                                    return [2 /*return*/, mutationCancellation_68.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignAssets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_68 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_68.resolved = true;
                                            mutationResolution_68.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_68.resolved) {
                                    return [2 /*return*/, mutationResolution_68.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_103 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_103);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "campaignAssetSets", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignAssetSetService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CampaignAssetSetServiceClient");
            return {
                /**
                 * @description create resources of type resources.ICampaignAssetSet
                 * @returns services.MutateCampaignAssetSetsResponse
                 */
                create: function (campaignAssetSets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_69, response, mutationResolution_69, err_104, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", campaignAssetSets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignAssetSetService.mutateCampaignAssetSets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_69 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_69.cancelled = true;
                                            mutationCancellation_69.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_69.cancelled) {
                                    return [2 /*return*/, mutationCancellation_69.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignAssetSets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_69 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_69.resolved = true;
                                            mutationResolution_69.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_69.resolved) {
                                    return [2 /*return*/, mutationResolution_69.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_104 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_104);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCampaignAssetSetsResponse
                 */
                remove: function (campaignAssetSets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_70, response, mutationResolution_70, err_105, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", campaignAssetSets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignAssetSetService.mutateCampaignAssetSets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_70 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_70.cancelled = true;
                                            mutationCancellation_70.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_70.cancelled) {
                                    return [2 /*return*/, mutationCancellation_70.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignAssetSets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_70 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_70.resolved = true;
                                            mutationResolution_70.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_70.resolved) {
                                    return [2 /*return*/, mutationResolution_70.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_105 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_105);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "campaignBidModifiers", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignBidModifierService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CampaignBidModifierServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CampaignBidModifier in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CampaignBidModifier
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_106;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCampaignBidModifierRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCampaignBidModifier(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_106 = _a.sent();
                                throw this.getGoogleAdsError(err_106);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICampaignBidModifier
                 * @returns services.MutateCampaignBidModifiersResponse
                 */
                create: function (campaignBidModifiers, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_71, response, mutationResolution_71, err_107, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", campaignBidModifiers);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignBidModifierService.mutateCampaignBidModifiers",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_71 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_71.cancelled = true;
                                            mutationCancellation_71.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_71.cancelled) {
                                    return [2 /*return*/, mutationCancellation_71.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignBidModifiers(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_71 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_71.resolved = true;
                                            mutationResolution_71.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_71.resolved) {
                                    return [2 /*return*/, mutationResolution_71.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_107 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_107);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICampaignBidModifier
                 * @returns services.MutateCampaignBidModifiersResponse
                 */
                update: function (campaignBidModifiers, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_72, response, mutationResolution_72, err_108, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", campaignBidModifiers
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CampaignBidModifier);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignBidModifierService.mutateCampaignBidModifiers",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_72 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_72.cancelled = true;
                                            mutationCancellation_72.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_72.cancelled) {
                                    return [2 /*return*/, mutationCancellation_72.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignBidModifiers(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_72 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_72.resolved = true;
                                            mutationResolution_72.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_72.resolved) {
                                    return [2 /*return*/, mutationResolution_72.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_108 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_108);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCampaignBidModifiersResponse
                 */
                remove: function (campaignBidModifiers, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_73, response, mutationResolution_73, err_109, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", campaignBidModifiers);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignBidModifierService.mutateCampaignBidModifiers",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_73 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_73.cancelled = true;
                                            mutationCancellation_73.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_73.cancelled) {
                                    return [2 /*return*/, mutationCancellation_73.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignBidModifiers(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_73 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_73.resolved = true;
                                            mutationResolution_73.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_73.resolved) {
                                    return [2 /*return*/, mutationResolution_73.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_109 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_109);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "campaignBudgets", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignBudgetService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CampaignBudgetServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CampaignBudget in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CampaignBudget
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_110;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCampaignBudgetRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCampaignBudget(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_110 = _a.sent();
                                throw this.getGoogleAdsError(err_110);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICampaignBudget
                 * @returns services.MutateCampaignBudgetsResponse
                 */
                create: function (campaignBudgets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_74, response, mutationResolution_74, err_111, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", campaignBudgets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignBudgetService.mutateCampaignBudgets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_74 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_74.cancelled = true;
                                            mutationCancellation_74.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_74.cancelled) {
                                    return [2 /*return*/, mutationCancellation_74.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignBudgets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_74 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_74.resolved = true;
                                            mutationResolution_74.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_74.resolved) {
                                    return [2 /*return*/, mutationResolution_74.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_111 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_111);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICampaignBudget
                 * @returns services.MutateCampaignBudgetsResponse
                 */
                update: function (campaignBudgets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_75, response, mutationResolution_75, err_112, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", campaignBudgets
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CampaignBudget);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignBudgetService.mutateCampaignBudgets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_75 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_75.cancelled = true;
                                            mutationCancellation_75.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_75.cancelled) {
                                    return [2 /*return*/, mutationCancellation_75.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignBudgets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_75 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_75.resolved = true;
                                            mutationResolution_75.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_75.resolved) {
                                    return [2 /*return*/, mutationResolution_75.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_112 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_112);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCampaignBudgetsResponse
                 */
                remove: function (campaignBudgets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_76, response, mutationResolution_76, err_113, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", campaignBudgets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignBudgetService.mutateCampaignBudgets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_76 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_76.cancelled = true;
                                            mutationCancellation_76.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_76.cancelled) {
                                    return [2 /*return*/, mutationCancellation_76.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignBudgets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_76 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_76.resolved = true;
                                            mutationResolution_76.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_76.resolved) {
                                    return [2 /*return*/, mutationResolution_76.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_113 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_113);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "campaignConversionGoals", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignConversionGoalService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CampaignConversionGoalServiceClient");
            return {
                /**
                 * @description update resources of type resources.ICampaignConversionGoal
                 * @returns services.MutateCampaignConversionGoalsResponse
                 */
                update: function (campaignConversionGoals, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_77, response, mutationResolution_77, err_114, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", campaignConversionGoals
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CampaignConversionGoal);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignConversionGoalService.mutateCampaignConversionGoals",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_77 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_77.cancelled = true;
                                            mutationCancellation_77.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_77.cancelled) {
                                    return [2 /*return*/, mutationCancellation_77.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignConversionGoals(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_77 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_77.resolved = true;
                                            mutationResolution_77.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_77.resolved) {
                                    return [2 /*return*/, mutationResolution_77.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_114 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_114);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "campaignCriteria", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignCriterionService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CampaignCriterionServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CampaignCriterion in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CampaignCriterion
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_115;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCampaignCriterionRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCampaignCriterion(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_115 = _a.sent();
                                throw this.getGoogleAdsError(err_115);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICampaignCriterion
                 * @returns services.MutateCampaignCriteriaResponse
                 */
                create: function (campaignCriteria, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_78, response, mutationResolution_78, err_116, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", campaignCriteria);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignCriterionService.mutateCampaignCriteria",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_78 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_78.cancelled = true;
                                            mutationCancellation_78.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_78.cancelled) {
                                    return [2 /*return*/, mutationCancellation_78.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignCriteria(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_78 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_78.resolved = true;
                                            mutationResolution_78.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_78.resolved) {
                                    return [2 /*return*/, mutationResolution_78.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_116 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_116);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICampaignCriterion
                 * @returns services.MutateCampaignCriteriaResponse
                 */
                update: function (campaignCriteria, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_79, response, mutationResolution_79, err_117, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", campaignCriteria
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CampaignCriterion);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignCriterionService.mutateCampaignCriteria",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_79 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_79.cancelled = true;
                                            mutationCancellation_79.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_79.cancelled) {
                                    return [2 /*return*/, mutationCancellation_79.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignCriteria(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_79 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_79.resolved = true;
                                            mutationResolution_79.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_79.resolved) {
                                    return [2 /*return*/, mutationResolution_79.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_117 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_117);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCampaignCriteriaResponse
                 */
                remove: function (campaignCriteria, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_80, response, mutationResolution_80, err_118, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", campaignCriteria);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignCriterionService.mutateCampaignCriteria",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_80 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_80.cancelled = true;
                                            mutationCancellation_80.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_80.cancelled) {
                                    return [2 /*return*/, mutationCancellation_80.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignCriteria(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_80 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_80.resolved = true;
                                            mutationResolution_80.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_80.resolved) {
                                    return [2 /*return*/, mutationResolution_80.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_118 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_118);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "campaignCustomizers", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignCustomizerService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CampaignCustomizerServiceClient");
            return {
                /**
                 * @description create resources of type resources.ICampaignCustomizer
                 * @returns services.MutateCampaignCustomizersResponse
                 */
                create: function (campaignCustomizers, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_81, response, mutationResolution_81, err_119, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", campaignCustomizers);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignCustomizerService.mutateCampaignCustomizers",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_81 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_81.cancelled = true;
                                            mutationCancellation_81.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_81.cancelled) {
                                    return [2 /*return*/, mutationCancellation_81.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignCustomizers(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_81 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_81.resolved = true;
                                            mutationResolution_81.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_81.resolved) {
                                    return [2 /*return*/, mutationResolution_81.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_119 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_119);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCampaignCustomizersResponse
                 */
                remove: function (campaignCustomizers, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_82, response, mutationResolution_82, err_120, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", campaignCustomizers);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignCustomizerService.mutateCampaignCustomizers",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_82 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_82.cancelled = true;
                                            mutationCancellation_82.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_82.cancelled) {
                                    return [2 /*return*/, mutationCancellation_82.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignCustomizers(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_82 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_82.resolved = true;
                                            mutationResolution_82.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_82.resolved) {
                                    return [2 /*return*/, mutationResolution_82.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_120 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_120);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "campaignDrafts", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignDraftService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CampaignDraftServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CampaignDraft in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CampaignDraft
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_121;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCampaignDraftRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCampaignDraft(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_121 = _a.sent();
                                throw this.getGoogleAdsError(err_121);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICampaignDraft
                 * @returns services.MutateCampaignDraftsResponse
                 */
                create: function (campaignDrafts, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_83, response, mutationResolution_83, err_122, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", campaignDrafts);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignDraftService.mutateCampaignDrafts",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_83 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_83.cancelled = true;
                                            mutationCancellation_83.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_83.cancelled) {
                                    return [2 /*return*/, mutationCancellation_83.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignDrafts(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_83 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_83.resolved = true;
                                            mutationResolution_83.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_83.resolved) {
                                    return [2 /*return*/, mutationResolution_83.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_122 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_122);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICampaignDraft
                 * @returns services.MutateCampaignDraftsResponse
                 */
                update: function (campaignDrafts, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_84, response, mutationResolution_84, err_123, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", campaignDrafts
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CampaignDraft);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignDraftService.mutateCampaignDrafts",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_84 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_84.cancelled = true;
                                            mutationCancellation_84.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_84.cancelled) {
                                    return [2 /*return*/, mutationCancellation_84.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignDrafts(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_84 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_84.resolved = true;
                                            mutationResolution_84.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_84.resolved) {
                                    return [2 /*return*/, mutationResolution_84.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_123 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_123);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCampaignDraftsResponse
                 */
                remove: function (campaignDrafts, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_85, response, mutationResolution_85, err_124, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", campaignDrafts);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignDraftService.mutateCampaignDrafts",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_85 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_85.cancelled = true;
                                            mutationCancellation_85.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_85.cancelled) {
                                    return [2 /*return*/, mutationCancellation_85.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignDrafts(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_85 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_85.resolved = true;
                                            mutationResolution_85.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_85.resolved) {
                                    return [2 /*return*/, mutationResolution_85.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_124 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_124);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignDraftService#promotecampaigndraft
                 */
                promoteCampaignDraft: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_125;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.promoteCampaignDraft(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_125 = _a.sent();
                                throw this.getGoogleAdsError(err_125);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignDraftService#listcampaigndraftasyncerrors
                 */
                listCampaignDraftAsyncErrors: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_126;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.listCampaignDraftAsyncErrors(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_126 = _a.sent();
                                throw this.getGoogleAdsError(err_126);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "campaignExperiments", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignExperimentService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CampaignExperimentServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CampaignExperiment in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CampaignExperiment
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_127;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCampaignExperimentRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCampaignExperiment(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_127 = _a.sent();
                                throw this.getGoogleAdsError(err_127);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignExperimentService#createcampaignexperiment
                 */
                createCampaignExperiment: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_128;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.createCampaignExperiment(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_128 = _a.sent();
                                throw this.getGoogleAdsError(err_128);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICampaignExperiment
                 * @returns services.MutateCampaignExperimentsResponse
                 */
                update: function (campaignExperiments, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_86, response, mutationResolution_86, err_129, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", campaignExperiments
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CampaignExperiment);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignExperimentService.mutateCampaignExperiments",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_86 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_86.cancelled = true;
                                            mutationCancellation_86.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_86.cancelled) {
                                    return [2 /*return*/, mutationCancellation_86.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignExperiments(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_86 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_86.resolved = true;
                                            mutationResolution_86.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_86.resolved) {
                                    return [2 /*return*/, mutationResolution_86.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_129 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_129);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCampaignExperimentsResponse
                 */
                remove: function (campaignExperiments, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_87, response, mutationResolution_87, err_130, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", campaignExperiments);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignExperimentService.mutateCampaignExperiments",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_87 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_87.cancelled = true;
                                            mutationCancellation_87.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_87.cancelled) {
                                    return [2 /*return*/, mutationCancellation_87.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignExperiments(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_87 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_87.resolved = true;
                                            mutationResolution_87.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_87.resolved) {
                                    return [2 /*return*/, mutationResolution_87.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_130 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_130);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignExperimentService#graduatecampaignexperiment
                 */
                graduateCampaignExperiment: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_131;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.graduateCampaignExperiment(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_131 = _a.sent();
                                throw this.getGoogleAdsError(err_131);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignExperimentService#promotecampaignexperiment
                 */
                promoteCampaignExperiment: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_132;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.promoteCampaignExperiment(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_132 = _a.sent();
                                throw this.getGoogleAdsError(err_132);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignExperimentService#endcampaignexperiment
                 */
                endCampaignExperiment: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_133;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.endCampaignExperiment(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_133 = _a.sent();
                                throw this.getGoogleAdsError(err_133);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignExperimentService#listcampaignexperimentasyncerrors
                 */
                listCampaignExperimentAsyncErrors: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_134;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.listCampaignExperimentAsyncErrors(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_134 = _a.sent();
                                throw this.getGoogleAdsError(err_134);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "campaignExtensionSettings", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignExtensionSettingService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CampaignExtensionSettingServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CampaignExtensionSetting in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CampaignExtensionSetting
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_135;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCampaignExtensionSettingRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCampaignExtensionSetting(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_135 = _a.sent();
                                throw this.getGoogleAdsError(err_135);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICampaignExtensionSetting
                 * @returns services.MutateCampaignExtensionSettingsResponse
                 */
                create: function (campaignExtensionSettings, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_88, response, mutationResolution_88, err_136, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", campaignExtensionSettings);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignExtensionSettingService.mutateCampaignExtensionSettings",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_88 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_88.cancelled = true;
                                            mutationCancellation_88.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_88.cancelled) {
                                    return [2 /*return*/, mutationCancellation_88.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignExtensionSettings(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_88 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_88.resolved = true;
                                            mutationResolution_88.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_88.resolved) {
                                    return [2 /*return*/, mutationResolution_88.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_136 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_136);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICampaignExtensionSetting
                 * @returns services.MutateCampaignExtensionSettingsResponse
                 */
                update: function (campaignExtensionSettings, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_89, response, mutationResolution_89, err_137, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", campaignExtensionSettings
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CampaignExtensionSetting);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignExtensionSettingService.mutateCampaignExtensionSettings",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_89 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_89.cancelled = true;
                                            mutationCancellation_89.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_89.cancelled) {
                                    return [2 /*return*/, mutationCancellation_89.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignExtensionSettings(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_89 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_89.resolved = true;
                                            mutationResolution_89.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_89.resolved) {
                                    return [2 /*return*/, mutationResolution_89.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_137 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_137);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCampaignExtensionSettingsResponse
                 */
                remove: function (campaignExtensionSettings, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_90, response, mutationResolution_90, err_138, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", campaignExtensionSettings);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignExtensionSettingService.mutateCampaignExtensionSettings",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_90 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_90.cancelled = true;
                                            mutationCancellation_90.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_90.cancelled) {
                                    return [2 /*return*/, mutationCancellation_90.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignExtensionSettings(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_90 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_90.resolved = true;
                                            mutationResolution_90.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_90.resolved) {
                                    return [2 /*return*/, mutationResolution_90.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_138 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_138);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "campaignFeeds", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignFeedService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CampaignFeedServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CampaignFeed in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CampaignFeed
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_139;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCampaignFeedRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCampaignFeed(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_139 = _a.sent();
                                throw this.getGoogleAdsError(err_139);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICampaignFeed
                 * @returns services.MutateCampaignFeedsResponse
                 */
                create: function (campaignFeeds, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_91, response, mutationResolution_91, err_140, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", campaignFeeds);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignFeedService.mutateCampaignFeeds",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_91 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_91.cancelled = true;
                                            mutationCancellation_91.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_91.cancelled) {
                                    return [2 /*return*/, mutationCancellation_91.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignFeeds(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_91 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_91.resolved = true;
                                            mutationResolution_91.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_91.resolved) {
                                    return [2 /*return*/, mutationResolution_91.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_140 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_140);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICampaignFeed
                 * @returns services.MutateCampaignFeedsResponse
                 */
                update: function (campaignFeeds, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_92, response, mutationResolution_92, err_141, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", campaignFeeds
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CampaignFeed);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignFeedService.mutateCampaignFeeds",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_92 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_92.cancelled = true;
                                            mutationCancellation_92.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_92.cancelled) {
                                    return [2 /*return*/, mutationCancellation_92.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignFeeds(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_92 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_92.resolved = true;
                                            mutationResolution_92.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_92.resolved) {
                                    return [2 /*return*/, mutationResolution_92.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_141 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_141);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCampaignFeedsResponse
                 */
                remove: function (campaignFeeds, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_93, response, mutationResolution_93, err_142, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", campaignFeeds);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignFeedService.mutateCampaignFeeds",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_93 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_93.cancelled = true;
                                            mutationCancellation_93.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_93.cancelled) {
                                    return [2 /*return*/, mutationCancellation_93.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignFeeds(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_93 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_93.resolved = true;
                                            mutationResolution_93.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_93.resolved) {
                                    return [2 /*return*/, mutationResolution_93.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_142 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_142);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "campaignLabels", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignLabelService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CampaignLabelServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CampaignLabel in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CampaignLabel
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_143;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCampaignLabelRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCampaignLabel(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_143 = _a.sent();
                                throw this.getGoogleAdsError(err_143);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICampaignLabel
                 * @returns services.MutateCampaignLabelsResponse
                 */
                create: function (campaignLabels, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_94, response, mutationResolution_94, err_144, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", campaignLabels);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignLabelService.mutateCampaignLabels",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_94 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_94.cancelled = true;
                                            mutationCancellation_94.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_94.cancelled) {
                                    return [2 /*return*/, mutationCancellation_94.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignLabels(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_94 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_94.resolved = true;
                                            mutationResolution_94.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_94.resolved) {
                                    return [2 /*return*/, mutationResolution_94.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_144 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_144);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCampaignLabelsResponse
                 */
                remove: function (campaignLabels, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_95, response, mutationResolution_95, err_145, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", campaignLabels);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignLabelService.mutateCampaignLabels",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_95 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_95.cancelled = true;
                                            mutationCancellation_95.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_95.cancelled) {
                                    return [2 /*return*/, mutationCancellation_95.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignLabels(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_95 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_95.resolved = true;
                                            mutationResolution_95.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_95.resolved) {
                                    return [2 /*return*/, mutationResolution_95.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_145 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_145);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "campaigns", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CampaignServiceClient");
            return {
                /**
                 * @description Retrieve a resources.Campaign in full detail
                 * @warning Don't use get in production!
                 * @returns resources.Campaign
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_146;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCampaignRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCampaign(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_146 = _a.sent();
                                throw this.getGoogleAdsError(err_146);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICampaign
                 * @returns services.MutateCampaignsResponse
                 */
                create: function (campaigns, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_96, response, mutationResolution_96, err_147, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", campaigns);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignService.mutateCampaigns",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_96 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_96.cancelled = true;
                                            mutationCancellation_96.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_96.cancelled) {
                                    return [2 /*return*/, mutationCancellation_96.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaigns(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_96 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_96.resolved = true;
                                            mutationResolution_96.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_96.resolved) {
                                    return [2 /*return*/, mutationResolution_96.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_147 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_147);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICampaign
                 * @returns services.MutateCampaignsResponse
                 */
                update: function (campaigns, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_97, response, mutationResolution_97, err_148, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", campaigns
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.Campaign);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignService.mutateCampaigns",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_97 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_97.cancelled = true;
                                            mutationCancellation_97.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_97.cancelled) {
                                    return [2 /*return*/, mutationCancellation_97.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaigns(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_97 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_97.resolved = true;
                                            mutationResolution_97.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_97.resolved) {
                                    return [2 /*return*/, mutationResolution_97.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_148 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_148);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCampaignsResponse
                 */
                remove: function (campaigns, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_98, response, mutationResolution_98, err_149, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", campaigns);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignService.mutateCampaigns",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_98 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_98.cancelled = true;
                                            mutationCancellation_98.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_98.cancelled) {
                                    return [2 /*return*/, mutationCancellation_98.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaigns(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_98 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_98.resolved = true;
                                            mutationResolution_98.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_98.resolved) {
                                    return [2 /*return*/, mutationResolution_98.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_149 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_149);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "campaignSharedSets", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignSharedSetService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CampaignSharedSetServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CampaignSharedSet in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CampaignSharedSet
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_150;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCampaignSharedSetRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCampaignSharedSet(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_150 = _a.sent();
                                throw this.getGoogleAdsError(err_150);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICampaignSharedSet
                 * @returns services.MutateCampaignSharedSetsResponse
                 */
                create: function (campaignSharedSets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_99, response, mutationResolution_99, err_151, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", campaignSharedSets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignSharedSetService.mutateCampaignSharedSets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_99 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_99.cancelled = true;
                                            mutationCancellation_99.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_99.cancelled) {
                                    return [2 /*return*/, mutationCancellation_99.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignSharedSets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_99 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_99.resolved = true;
                                            mutationResolution_99.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_99.resolved) {
                                    return [2 /*return*/, mutationResolution_99.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_151 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_151);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCampaignSharedSetsResponse
                 */
                remove: function (campaignSharedSets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_100, response, mutationResolution_100, err_152, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", campaignSharedSets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CampaignSharedSetService.mutateCampaignSharedSets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_100 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_100.cancelled = true;
                                            mutationCancellation_100.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_100.cancelled) {
                                    return [2 /*return*/, mutationCancellation_100.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCampaignSharedSets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_100 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_100.resolved = true;
                                            mutationResolution_100.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_100.resolved) {
                                    return [2 /*return*/, mutationResolution_100.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_152 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_152);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "conversionActions", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ConversionActionService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("ConversionActionServiceClient");
            return {
                /**
                 * @description Retrieve a resources.ConversionAction in full detail
                 * @warning Don't use get in production!
                 * @returns resources.ConversionAction
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_153;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetConversionActionRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getConversionAction(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_153 = _a.sent();
                                throw this.getGoogleAdsError(err_153);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IConversionAction
                 * @returns services.MutateConversionActionsResponse
                 */
                create: function (conversionActions, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_101, response, mutationResolution_101, err_154, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", conversionActions);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "ConversionActionService.mutateConversionActions",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_101 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_101.cancelled = true;
                                            mutationCancellation_101.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_101.cancelled) {
                                    return [2 /*return*/, mutationCancellation_101.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateConversionActions(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_101 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_101.resolved = true;
                                            mutationResolution_101.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_101.resolved) {
                                    return [2 /*return*/, mutationResolution_101.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_154 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_154);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IConversionAction
                 * @returns services.MutateConversionActionsResponse
                 */
                update: function (conversionActions, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_102, response, mutationResolution_102, err_155, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", conversionActions
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.ConversionAction);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "ConversionActionService.mutateConversionActions",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_102 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_102.cancelled = true;
                                            mutationCancellation_102.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_102.cancelled) {
                                    return [2 /*return*/, mutationCancellation_102.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateConversionActions(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_102 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_102.resolved = true;
                                            mutationResolution_102.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_102.resolved) {
                                    return [2 /*return*/, mutationResolution_102.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_155 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_155);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateConversionActionsResponse
                 */
                remove: function (conversionActions, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_103, response, mutationResolution_103, err_156, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", conversionActions);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "ConversionActionService.mutateConversionActions",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_103 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_103.cancelled = true;
                                            mutationCancellation_103.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_103.cancelled) {
                                    return [2 /*return*/, mutationCancellation_103.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateConversionActions(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_103 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_103.resolved = true;
                                            mutationResolution_103.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_103.resolved) {
                                    return [2 /*return*/, mutationResolution_103.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_156 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_156);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "conversionCustomVariables", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ConversionCustomVariableService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("ConversionCustomVariableServiceClient");
            return {
                /**
                 * @description Retrieve a resources.ConversionCustomVariable in full detail
                 * @warning Don't use get in production!
                 * @returns resources.ConversionCustomVariable
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_157;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetConversionCustomVariableRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getConversionCustomVariable(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_157 = _a.sent();
                                throw this.getGoogleAdsError(err_157);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IConversionCustomVariable
                 * @returns services.MutateConversionCustomVariablesResponse
                 */
                create: function (conversionCustomVariables, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_104, response, mutationResolution_104, err_158, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", conversionCustomVariables);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "ConversionCustomVariableService.mutateConversionCustomVariables",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_104 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_104.cancelled = true;
                                            mutationCancellation_104.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_104.cancelled) {
                                    return [2 /*return*/, mutationCancellation_104.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateConversionCustomVariables(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_104 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_104.resolved = true;
                                            mutationResolution_104.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_104.resolved) {
                                    return [2 /*return*/, mutationResolution_104.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_158 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_158);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IConversionCustomVariable
                 * @returns services.MutateConversionCustomVariablesResponse
                 */
                update: function (conversionCustomVariables, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_105, response, mutationResolution_105, err_159, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", conversionCustomVariables
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.ConversionCustomVariable);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "ConversionCustomVariableService.mutateConversionCustomVariables",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_105 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_105.cancelled = true;
                                            mutationCancellation_105.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_105.cancelled) {
                                    return [2 /*return*/, mutationCancellation_105.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateConversionCustomVariables(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_105 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_105.resolved = true;
                                            mutationResolution_105.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_105.resolved) {
                                    return [2 /*return*/, mutationResolution_105.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_159 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_159);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "conversionGoalCampaignConfigs", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ConversionGoalCampaignConfigService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("ConversionGoalCampaignConfigServiceClient");
            return {
                /**
                 * @description update resources of type resources.IConversionGoalCampaignConfig
                 * @returns services.MutateConversionGoalCampaignConfigsResponse
                 */
                update: function (conversionGoalCampaignConfigs, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_106, response, mutationResolution_106, err_160, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", conversionGoalCampaignConfigs
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.ConversionGoalCampaignConfig);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "ConversionGoalCampaignConfigService.mutateConversionGoalCampaignConfigs",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_106 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_106.cancelled = true;
                                            mutationCancellation_106.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_106.cancelled) {
                                    return [2 /*return*/, mutationCancellation_106.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateConversionGoalCampaignConfigs(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_106 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_106.resolved = true;
                                            mutationResolution_106.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_106.resolved) {
                                    return [2 /*return*/, mutationResolution_106.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_160 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_160);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "conversionValueRules", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ConversionValueRuleService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("ConversionValueRuleServiceClient");
            return {
                /**
                 * @description Retrieve a resources.ConversionValueRule in full detail
                 * @warning Don't use get in production!
                 * @returns resources.ConversionValueRule
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_161;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetConversionValueRuleRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getConversionValueRule(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_161 = _a.sent();
                                throw this.getGoogleAdsError(err_161);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IConversionValueRule
                 * @returns services.MutateConversionValueRulesResponse
                 */
                create: function (conversionValueRules, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_107, response, mutationResolution_107, err_162, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", conversionValueRules);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "ConversionValueRuleService.mutateConversionValueRules",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_107 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_107.cancelled = true;
                                            mutationCancellation_107.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_107.cancelled) {
                                    return [2 /*return*/, mutationCancellation_107.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateConversionValueRules(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_107 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_107.resolved = true;
                                            mutationResolution_107.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_107.resolved) {
                                    return [2 /*return*/, mutationResolution_107.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_162 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_162);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IConversionValueRule
                 * @returns services.MutateConversionValueRulesResponse
                 */
                update: function (conversionValueRules, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_108, response, mutationResolution_108, err_163, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", conversionValueRules
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.ConversionValueRule);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "ConversionValueRuleService.mutateConversionValueRules",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_108 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_108.cancelled = true;
                                            mutationCancellation_108.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_108.cancelled) {
                                    return [2 /*return*/, mutationCancellation_108.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateConversionValueRules(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_108 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_108.resolved = true;
                                            mutationResolution_108.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_108.resolved) {
                                    return [2 /*return*/, mutationResolution_108.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_163 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_163);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateConversionValueRulesResponse
                 */
                remove: function (conversionValueRules, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_109, response, mutationResolution_109, err_164, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", conversionValueRules);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "ConversionValueRuleService.mutateConversionValueRules",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_109 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_109.cancelled = true;
                                            mutationCancellation_109.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_109.cancelled) {
                                    return [2 /*return*/, mutationCancellation_109.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateConversionValueRules(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_109 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_109.resolved = true;
                                            mutationResolution_109.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_109.resolved) {
                                    return [2 /*return*/, mutationResolution_109.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_164 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_164);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "conversionValueRuleSets", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ConversionValueRuleSetService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("ConversionValueRuleSetServiceClient");
            return {
                /**
                 * @description Retrieve a resources.ConversionValueRuleSet in full detail
                 * @warning Don't use get in production!
                 * @returns resources.ConversionValueRuleSet
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_165;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetConversionValueRuleSetRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getConversionValueRuleSet(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_165 = _a.sent();
                                throw this.getGoogleAdsError(err_165);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IConversionValueRuleSet
                 * @returns services.MutateConversionValueRuleSetsResponse
                 */
                create: function (conversionValueRuleSets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_110, response, mutationResolution_110, err_166, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", conversionValueRuleSets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "ConversionValueRuleSetService.mutateConversionValueRuleSets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_110 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_110.cancelled = true;
                                            mutationCancellation_110.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_110.cancelled) {
                                    return [2 /*return*/, mutationCancellation_110.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateConversionValueRuleSets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_110 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_110.resolved = true;
                                            mutationResolution_110.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_110.resolved) {
                                    return [2 /*return*/, mutationResolution_110.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_166 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_166);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IConversionValueRuleSet
                 * @returns services.MutateConversionValueRuleSetsResponse
                 */
                update: function (conversionValueRuleSets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_111, response, mutationResolution_111, err_167, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", conversionValueRuleSets
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.ConversionValueRuleSet);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "ConversionValueRuleSetService.mutateConversionValueRuleSets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_111 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_111.cancelled = true;
                                            mutationCancellation_111.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_111.cancelled) {
                                    return [2 /*return*/, mutationCancellation_111.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateConversionValueRuleSets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_111 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_111.resolved = true;
                                            mutationResolution_111.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_111.resolved) {
                                    return [2 /*return*/, mutationResolution_111.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_167 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_167);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateConversionValueRuleSetsResponse
                 */
                remove: function (conversionValueRuleSets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_112, response, mutationResolution_112, err_168, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", conversionValueRuleSets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "ConversionValueRuleSetService.mutateConversionValueRuleSets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_112 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_112.cancelled = true;
                                            mutationCancellation_112.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_112.cancelled) {
                                    return [2 /*return*/, mutationCancellation_112.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateConversionValueRuleSets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_112 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_112.resolved = true;
                                            mutationResolution_112.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_112.resolved) {
                                    return [2 /*return*/, mutationResolution_112.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_168 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_168);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "customConversionGoals", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomConversionGoalService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CustomConversionGoalServiceClient");
            return {
                /**
                 * @description create resources of type resources.ICustomConversionGoal
                 * @returns services.MutateCustomConversionGoalsResponse
                 */
                create: function (customConversionGoals, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_113, response, mutationResolution_113, err_169, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", customConversionGoals);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomConversionGoalService.mutateCustomConversionGoals",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_113 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_113.cancelled = true;
                                            mutationCancellation_113.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_113.cancelled) {
                                    return [2 /*return*/, mutationCancellation_113.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomConversionGoals(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_113 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_113.resolved = true;
                                            mutationResolution_113.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_113.resolved) {
                                    return [2 /*return*/, mutationResolution_113.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_169 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_169);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICustomConversionGoal
                 * @returns services.MutateCustomConversionGoalsResponse
                 */
                update: function (customConversionGoals, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_114, response, mutationResolution_114, err_170, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", customConversionGoals
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CustomConversionGoal);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomConversionGoalService.mutateCustomConversionGoals",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_114 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_114.cancelled = true;
                                            mutationCancellation_114.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_114.cancelled) {
                                    return [2 /*return*/, mutationCancellation_114.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomConversionGoals(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_114 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_114.resolved = true;
                                            mutationResolution_114.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_114.resolved) {
                                    return [2 /*return*/, mutationResolution_114.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_170 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_170);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCustomConversionGoalsResponse
                 */
                remove: function (customConversionGoals, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_115, response, mutationResolution_115, err_171, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", customConversionGoals);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomConversionGoalService.mutateCustomConversionGoals",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_115 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_115.cancelled = true;
                                            mutationCancellation_115.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_115.cancelled) {
                                    return [2 /*return*/, mutationCancellation_115.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomConversionGoals(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_115 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_115.resolved = true;
                                            mutationResolution_115.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_115.resolved) {
                                    return [2 /*return*/, mutationResolution_115.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_171 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_171);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "customerAssets", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomerAssetService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CustomerAssetServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CustomerAsset in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CustomerAsset
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_172;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCustomerAssetRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCustomerAsset(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_172 = _a.sent();
                                throw this.getGoogleAdsError(err_172);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICustomerAsset
                 * @returns services.MutateCustomerAssetsResponse
                 */
                create: function (customerAssets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_116, response, mutationResolution_116, err_173, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", customerAssets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerAssetService.mutateCustomerAssets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_116 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_116.cancelled = true;
                                            mutationCancellation_116.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_116.cancelled) {
                                    return [2 /*return*/, mutationCancellation_116.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerAssets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_116 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_116.resolved = true;
                                            mutationResolution_116.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_116.resolved) {
                                    return [2 /*return*/, mutationResolution_116.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_173 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_173);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICustomerAsset
                 * @returns services.MutateCustomerAssetsResponse
                 */
                update: function (customerAssets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_117, response, mutationResolution_117, err_174, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", customerAssets
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CustomerAsset);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerAssetService.mutateCustomerAssets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_117 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_117.cancelled = true;
                                            mutationCancellation_117.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_117.cancelled) {
                                    return [2 /*return*/, mutationCancellation_117.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerAssets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_117 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_117.resolved = true;
                                            mutationResolution_117.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_117.resolved) {
                                    return [2 /*return*/, mutationResolution_117.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_174 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_174);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCustomerAssetsResponse
                 */
                remove: function (customerAssets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_118, response, mutationResolution_118, err_175, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", customerAssets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerAssetService.mutateCustomerAssets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_118 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_118.cancelled = true;
                                            mutationCancellation_118.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_118.cancelled) {
                                    return [2 /*return*/, mutationCancellation_118.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerAssets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_118 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_118.resolved = true;
                                            mutationResolution_118.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_118.resolved) {
                                    return [2 /*return*/, mutationResolution_118.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_175 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_175);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "customerConversionGoals", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomerConversionGoalService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CustomerConversionGoalServiceClient");
            return {
                /**
                 * @description update resources of type resources.ICustomerConversionGoal
                 * @returns services.MutateCustomerConversionGoalsResponse
                 */
                update: function (customerConversionGoals, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_119, response, mutationResolution_119, err_176, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", customerConversionGoals
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CustomerConversionGoal);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerConversionGoalService.mutateCustomerConversionGoals",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_119 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_119.cancelled = true;
                                            mutationCancellation_119.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_119.cancelled) {
                                    return [2 /*return*/, mutationCancellation_119.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerConversionGoals(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_119 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_119.resolved = true;
                                            mutationResolution_119.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_119.resolved) {
                                    return [2 /*return*/, mutationResolution_119.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_176 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_176);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "customerCustomizers", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomerCustomizerService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CustomerCustomizerServiceClient");
            return {
                /**
                 * @description create resources of type resources.ICustomerCustomizer
                 * @returns services.MutateCustomerCustomizersResponse
                 */
                create: function (customerCustomizers, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_120, response, mutationResolution_120, err_177, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", customerCustomizers);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerCustomizerService.mutateCustomerCustomizers",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_120 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_120.cancelled = true;
                                            mutationCancellation_120.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_120.cancelled) {
                                    return [2 /*return*/, mutationCancellation_120.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerCustomizers(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_120 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_120.resolved = true;
                                            mutationResolution_120.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_120.resolved) {
                                    return [2 /*return*/, mutationResolution_120.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_177 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_177);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCustomerCustomizersResponse
                 */
                remove: function (customerCustomizers, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_121, response, mutationResolution_121, err_178, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", customerCustomizers);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerCustomizerService.mutateCustomerCustomizers",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_121 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_121.cancelled = true;
                                            mutationCancellation_121.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_121.cancelled) {
                                    return [2 /*return*/, mutationCancellation_121.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerCustomizers(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_121 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_121.resolved = true;
                                            mutationResolution_121.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_121.resolved) {
                                    return [2 /*return*/, mutationResolution_121.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_178 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_178);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "customerExtensionSettings", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomerExtensionSettingService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CustomerExtensionSettingServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CustomerExtensionSetting in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CustomerExtensionSetting
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_179;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCustomerExtensionSettingRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCustomerExtensionSetting(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_179 = _a.sent();
                                throw this.getGoogleAdsError(err_179);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICustomerExtensionSetting
                 * @returns services.MutateCustomerExtensionSettingsResponse
                 */
                create: function (customerExtensionSettings, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_122, response, mutationResolution_122, err_180, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", customerExtensionSettings);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerExtensionSettingService.mutateCustomerExtensionSettings",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_122 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_122.cancelled = true;
                                            mutationCancellation_122.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_122.cancelled) {
                                    return [2 /*return*/, mutationCancellation_122.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerExtensionSettings(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_122 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_122.resolved = true;
                                            mutationResolution_122.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_122.resolved) {
                                    return [2 /*return*/, mutationResolution_122.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_180 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_180);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICustomerExtensionSetting
                 * @returns services.MutateCustomerExtensionSettingsResponse
                 */
                update: function (customerExtensionSettings, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_123, response, mutationResolution_123, err_181, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", customerExtensionSettings
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CustomerExtensionSetting);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerExtensionSettingService.mutateCustomerExtensionSettings",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_123 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_123.cancelled = true;
                                            mutationCancellation_123.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_123.cancelled) {
                                    return [2 /*return*/, mutationCancellation_123.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerExtensionSettings(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_123 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_123.resolved = true;
                                            mutationResolution_123.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_123.resolved) {
                                    return [2 /*return*/, mutationResolution_123.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_181 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_181);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCustomerExtensionSettingsResponse
                 */
                remove: function (customerExtensionSettings, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_124, response, mutationResolution_124, err_182, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", customerExtensionSettings);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerExtensionSettingService.mutateCustomerExtensionSettings",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_124 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_124.cancelled = true;
                                            mutationCancellation_124.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_124.cancelled) {
                                    return [2 /*return*/, mutationCancellation_124.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerExtensionSettings(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_124 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_124.resolved = true;
                                            mutationResolution_124.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_124.resolved) {
                                    return [2 /*return*/, mutationResolution_124.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_182 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_182);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "customerFeeds", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomerFeedService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CustomerFeedServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CustomerFeed in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CustomerFeed
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_183;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCustomerFeedRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCustomerFeed(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_183 = _a.sent();
                                throw this.getGoogleAdsError(err_183);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICustomerFeed
                 * @returns services.MutateCustomerFeedsResponse
                 */
                create: function (customerFeeds, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_125, response, mutationResolution_125, err_184, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", customerFeeds);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerFeedService.mutateCustomerFeeds",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_125 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_125.cancelled = true;
                                            mutationCancellation_125.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_125.cancelled) {
                                    return [2 /*return*/, mutationCancellation_125.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerFeeds(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_125 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_125.resolved = true;
                                            mutationResolution_125.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_125.resolved) {
                                    return [2 /*return*/, mutationResolution_125.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_184 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_184);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICustomerFeed
                 * @returns services.MutateCustomerFeedsResponse
                 */
                update: function (customerFeeds, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_126, response, mutationResolution_126, err_185, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", customerFeeds
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CustomerFeed);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerFeedService.mutateCustomerFeeds",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_126 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_126.cancelled = true;
                                            mutationCancellation_126.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_126.cancelled) {
                                    return [2 /*return*/, mutationCancellation_126.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerFeeds(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_126 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_126.resolved = true;
                                            mutationResolution_126.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_126.resolved) {
                                    return [2 /*return*/, mutationResolution_126.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_185 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_185);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCustomerFeedsResponse
                 */
                remove: function (customerFeeds, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_127, response, mutationResolution_127, err_186, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", customerFeeds);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerFeedService.mutateCustomerFeeds",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_127 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_127.cancelled = true;
                                            mutationCancellation_127.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_127.cancelled) {
                                    return [2 /*return*/, mutationCancellation_127.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerFeeds(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_127 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_127.resolved = true;
                                            mutationResolution_127.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_127.resolved) {
                                    return [2 /*return*/, mutationResolution_127.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_186 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_186);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "customerLabels", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomerLabelService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CustomerLabelServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CustomerLabel in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CustomerLabel
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_187;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCustomerLabelRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCustomerLabel(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_187 = _a.sent();
                                throw this.getGoogleAdsError(err_187);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICustomerLabel
                 * @returns services.MutateCustomerLabelsResponse
                 */
                create: function (customerLabels, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_128, response, mutationResolution_128, err_188, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", customerLabels);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerLabelService.mutateCustomerLabels",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_128 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_128.cancelled = true;
                                            mutationCancellation_128.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_128.cancelled) {
                                    return [2 /*return*/, mutationCancellation_128.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerLabels(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_128 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_128.resolved = true;
                                            mutationResolution_128.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_128.resolved) {
                                    return [2 /*return*/, mutationResolution_128.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_188 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_188);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCustomerLabelsResponse
                 */
                remove: function (customerLabels, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_129, response, mutationResolution_129, err_189, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", customerLabels);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerLabelService.mutateCustomerLabels",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_129 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_129.cancelled = true;
                                            mutationCancellation_129.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_129.cancelled) {
                                    return [2 /*return*/, mutationCancellation_129.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerLabels(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_129 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_129.resolved = true;
                                            mutationResolution_129.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_129.resolved) {
                                    return [2 /*return*/, mutationResolution_129.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_189 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_189);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "customerNegativeCriteria", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomerNegativeCriterionService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CustomerNegativeCriterionServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CustomerNegativeCriterion in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CustomerNegativeCriterion
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_190;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCustomerNegativeCriterionRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCustomerNegativeCriterion(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_190 = _a.sent();
                                throw this.getGoogleAdsError(err_190);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICustomerNegativeCriterion
                 * @returns services.MutateCustomerNegativeCriteriaResponse
                 */
                create: function (customerNegativeCriteria, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_130, response, mutationResolution_130, err_191, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", customerNegativeCriteria);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerNegativeCriterionService.mutateCustomerNegativeCriteria",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_130 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_130.cancelled = true;
                                            mutationCancellation_130.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_130.cancelled) {
                                    return [2 /*return*/, mutationCancellation_130.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerNegativeCriteria(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_130 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_130.resolved = true;
                                            mutationResolution_130.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_130.resolved) {
                                    return [2 /*return*/, mutationResolution_130.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_191 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_191);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCustomerNegativeCriteriaResponse
                 */
                remove: function (customerNegativeCriteria, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_131, response, mutationResolution_131, err_192, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", customerNegativeCriteria);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerNegativeCriterionService.mutateCustomerNegativeCriteria",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_131 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_131.cancelled = true;
                                            mutationCancellation_131.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_131.cancelled) {
                                    return [2 /*return*/, mutationCancellation_131.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerNegativeCriteria(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_131 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_131.resolved = true;
                                            mutationResolution_131.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_131.resolved) {
                                    return [2 /*return*/, mutationResolution_131.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_192 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_192);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "customers", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomerService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CustomerServiceClient");
            return {
                /**
                 * @description Retrieve a resources.Customer in full detail
                 * @warning Don't use get in production!
                 * @returns resources.Customer
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_193;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCustomerRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCustomer(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_193 = _a.sent();
                                throw this.getGoogleAdsError(err_193);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICustomer
                 * @returns services.MutateCustomerResponse
                 */
                update: function (customers, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_132, response, mutationResolution_132, err_194, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", customers
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.Customer);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerService.mutateCustomer",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_132 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_132.cancelled = true;
                                            mutationCancellation_132.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_132.cancelled) {
                                    return [2 /*return*/, mutationCancellation_132.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomer(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_132 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_132.resolved = true;
                                            mutationResolution_132.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_132.resolved) {
                                    return [2 /*return*/, mutationResolution_132.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_194 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_194);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomerService#listaccessiblecustomers
                 */
                listAccessibleCustomers: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_195;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.listAccessibleCustomers(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_195 = _a.sent();
                                throw this.getGoogleAdsError(err_195);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomerService#createcustomerclient
                 */
                createCustomerClient: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_196;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.createCustomerClient(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_196 = _a.sent();
                                throw this.getGoogleAdsError(err_196);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "customizerAttributes", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomizerAttributeService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CustomizerAttributeServiceClient");
            return {
                /**
                 * @description create resources of type resources.ICustomizerAttribute
                 * @returns services.MutateCustomizerAttributesResponse
                 */
                create: function (customizerAttributes, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_133, response, mutationResolution_133, err_197, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", customizerAttributes);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomizerAttributeService.mutateCustomizerAttributes",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_133 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_133.cancelled = true;
                                            mutationCancellation_133.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_133.cancelled) {
                                    return [2 /*return*/, mutationCancellation_133.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomizerAttributes(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_133 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_133.resolved = true;
                                            mutationResolution_133.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_133.resolved) {
                                    return [2 /*return*/, mutationResolution_133.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_197 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_197);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCustomizerAttributesResponse
                 */
                remove: function (customizerAttributes, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_134, response, mutationResolution_134, err_198, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", customizerAttributes);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomizerAttributeService.mutateCustomizerAttributes",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_134 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_134.cancelled = true;
                                            mutationCancellation_134.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_134.cancelled) {
                                    return [2 /*return*/, mutationCancellation_134.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomizerAttributes(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_134 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_134.resolved = true;
                                            mutationResolution_134.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_134.resolved) {
                                    return [2 /*return*/, mutationResolution_134.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_198 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_198);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "extensionFeedItems", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ExtensionFeedItemService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("ExtensionFeedItemServiceClient");
            return {
                /**
                 * @description Retrieve a resources.ExtensionFeedItem in full detail
                 * @warning Don't use get in production!
                 * @returns resources.ExtensionFeedItem
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_199;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetExtensionFeedItemRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getExtensionFeedItem(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_199 = _a.sent();
                                throw this.getGoogleAdsError(err_199);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IExtensionFeedItem
                 * @returns services.MutateExtensionFeedItemsResponse
                 */
                create: function (extensionFeedItems, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_135, response, mutationResolution_135, err_200, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", extensionFeedItems);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "ExtensionFeedItemService.mutateExtensionFeedItems",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_135 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_135.cancelled = true;
                                            mutationCancellation_135.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_135.cancelled) {
                                    return [2 /*return*/, mutationCancellation_135.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateExtensionFeedItems(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_135 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_135.resolved = true;
                                            mutationResolution_135.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_135.resolved) {
                                    return [2 /*return*/, mutationResolution_135.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_200 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_200);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IExtensionFeedItem
                 * @returns services.MutateExtensionFeedItemsResponse
                 */
                update: function (extensionFeedItems, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_136, response, mutationResolution_136, err_201, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", extensionFeedItems
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.ExtensionFeedItem);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "ExtensionFeedItemService.mutateExtensionFeedItems",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_136 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_136.cancelled = true;
                                            mutationCancellation_136.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_136.cancelled) {
                                    return [2 /*return*/, mutationCancellation_136.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateExtensionFeedItems(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_136 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_136.resolved = true;
                                            mutationResolution_136.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_136.resolved) {
                                    return [2 /*return*/, mutationResolution_136.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_201 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_201);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateExtensionFeedItemsResponse
                 */
                remove: function (extensionFeedItems, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_137, response, mutationResolution_137, err_202, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", extensionFeedItems);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "ExtensionFeedItemService.mutateExtensionFeedItems",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_137 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_137.cancelled = true;
                                            mutationCancellation_137.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_137.cancelled) {
                                    return [2 /*return*/, mutationCancellation_137.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateExtensionFeedItems(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_137 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_137.resolved = true;
                                            mutationResolution_137.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_137.resolved) {
                                    return [2 /*return*/, mutationResolution_137.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_202 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_202);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "feedItems", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/FeedItemService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("FeedItemServiceClient");
            return {
                /**
                 * @description Retrieve a resources.FeedItem in full detail
                 * @warning Don't use get in production!
                 * @returns resources.FeedItem
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_203;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetFeedItemRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getFeedItem(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_203 = _a.sent();
                                throw this.getGoogleAdsError(err_203);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IFeedItem
                 * @returns services.MutateFeedItemsResponse
                 */
                create: function (feedItems, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_138, response, mutationResolution_138, err_204, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", feedItems);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "FeedItemService.mutateFeedItems",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_138 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_138.cancelled = true;
                                            mutationCancellation_138.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_138.cancelled) {
                                    return [2 /*return*/, mutationCancellation_138.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateFeedItems(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_138 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_138.resolved = true;
                                            mutationResolution_138.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_138.resolved) {
                                    return [2 /*return*/, mutationResolution_138.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_204 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_204);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IFeedItem
                 * @returns services.MutateFeedItemsResponse
                 */
                update: function (feedItems, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_139, response, mutationResolution_139, err_205, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", feedItems
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.FeedItem);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "FeedItemService.mutateFeedItems",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_139 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_139.cancelled = true;
                                            mutationCancellation_139.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_139.cancelled) {
                                    return [2 /*return*/, mutationCancellation_139.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateFeedItems(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_139 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_139.resolved = true;
                                            mutationResolution_139.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_139.resolved) {
                                    return [2 /*return*/, mutationResolution_139.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_205 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_205);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateFeedItemsResponse
                 */
                remove: function (feedItems, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_140, response, mutationResolution_140, err_206, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", feedItems);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "FeedItemService.mutateFeedItems",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_140 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_140.cancelled = true;
                                            mutationCancellation_140.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_140.cancelled) {
                                    return [2 /*return*/, mutationCancellation_140.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateFeedItems(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_140 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_140.resolved = true;
                                            mutationResolution_140.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_140.resolved) {
                                    return [2 /*return*/, mutationResolution_140.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_206 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_206);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "feedItemSetLinks", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/FeedItemSetLinkService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("FeedItemSetLinkServiceClient");
            return {
                /**
                 * @description Retrieve a resources.FeedItemSetLink in full detail
                 * @warning Don't use get in production!
                 * @returns resources.FeedItemSetLink
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_207;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetFeedItemSetLinkRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getFeedItemSetLink(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_207 = _a.sent();
                                throw this.getGoogleAdsError(err_207);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IFeedItemSetLink
                 * @returns services.MutateFeedItemSetLinksResponse
                 */
                create: function (feedItemSetLinks, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_141, response, mutationResolution_141, err_208, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", feedItemSetLinks);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "FeedItemSetLinkService.mutateFeedItemSetLinks",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_141 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_141.cancelled = true;
                                            mutationCancellation_141.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_141.cancelled) {
                                    return [2 /*return*/, mutationCancellation_141.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateFeedItemSetLinks(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_141 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_141.resolved = true;
                                            mutationResolution_141.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_141.resolved) {
                                    return [2 /*return*/, mutationResolution_141.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_208 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_208);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateFeedItemSetLinksResponse
                 */
                remove: function (feedItemSetLinks, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_142, response, mutationResolution_142, err_209, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", feedItemSetLinks);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "FeedItemSetLinkService.mutateFeedItemSetLinks",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_142 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_142.cancelled = true;
                                            mutationCancellation_142.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_142.cancelled) {
                                    return [2 /*return*/, mutationCancellation_142.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateFeedItemSetLinks(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_142 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_142.resolved = true;
                                            mutationResolution_142.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_142.resolved) {
                                    return [2 /*return*/, mutationResolution_142.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_209 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_209);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "feedItemSets", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/FeedItemSetService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("FeedItemSetServiceClient");
            return {
                /**
                 * @description Retrieve a resources.FeedItemSet in full detail
                 * @warning Don't use get in production!
                 * @returns resources.FeedItemSet
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_210;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetFeedItemSetRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getFeedItemSet(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_210 = _a.sent();
                                throw this.getGoogleAdsError(err_210);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IFeedItemSet
                 * @returns services.MutateFeedItemSetsResponse
                 */
                create: function (feedItemSets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_143, response, mutationResolution_143, err_211, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", feedItemSets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "FeedItemSetService.mutateFeedItemSets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_143 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_143.cancelled = true;
                                            mutationCancellation_143.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_143.cancelled) {
                                    return [2 /*return*/, mutationCancellation_143.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateFeedItemSets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_143 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_143.resolved = true;
                                            mutationResolution_143.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_143.resolved) {
                                    return [2 /*return*/, mutationResolution_143.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_211 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_211);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IFeedItemSet
                 * @returns services.MutateFeedItemSetsResponse
                 */
                update: function (feedItemSets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_144, response, mutationResolution_144, err_212, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", feedItemSets
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.FeedItemSet);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "FeedItemSetService.mutateFeedItemSets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_144 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_144.cancelled = true;
                                            mutationCancellation_144.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_144.cancelled) {
                                    return [2 /*return*/, mutationCancellation_144.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateFeedItemSets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_144 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_144.resolved = true;
                                            mutationResolution_144.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_144.resolved) {
                                    return [2 /*return*/, mutationResolution_144.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_212 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_212);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateFeedItemSetsResponse
                 */
                remove: function (feedItemSets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_145, response, mutationResolution_145, err_213, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", feedItemSets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "FeedItemSetService.mutateFeedItemSets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_145 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_145.cancelled = true;
                                            mutationCancellation_145.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_145.cancelled) {
                                    return [2 /*return*/, mutationCancellation_145.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateFeedItemSets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_145 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_145.resolved = true;
                                            mutationResolution_145.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_145.resolved) {
                                    return [2 /*return*/, mutationResolution_145.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_213 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_213);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "feedItemTargets", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/FeedItemTargetService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("FeedItemTargetServiceClient");
            return {
                /**
                 * @description Retrieve a resources.FeedItemTarget in full detail
                 * @warning Don't use get in production!
                 * @returns resources.FeedItemTarget
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_214;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetFeedItemTargetRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getFeedItemTarget(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_214 = _a.sent();
                                throw this.getGoogleAdsError(err_214);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IFeedItemTarget
                 * @returns services.MutateFeedItemTargetsResponse
                 */
                create: function (feedItemTargets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_146, response, mutationResolution_146, err_215, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", feedItemTargets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "FeedItemTargetService.mutateFeedItemTargets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_146 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_146.cancelled = true;
                                            mutationCancellation_146.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_146.cancelled) {
                                    return [2 /*return*/, mutationCancellation_146.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateFeedItemTargets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_146 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_146.resolved = true;
                                            mutationResolution_146.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_146.resolved) {
                                    return [2 /*return*/, mutationResolution_146.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_215 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_215);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateFeedItemTargetsResponse
                 */
                remove: function (feedItemTargets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_147, response, mutationResolution_147, err_216, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", feedItemTargets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "FeedItemTargetService.mutateFeedItemTargets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_147 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_147.cancelled = true;
                                            mutationCancellation_147.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_147.cancelled) {
                                    return [2 /*return*/, mutationCancellation_147.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateFeedItemTargets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_147 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_147.resolved = true;
                                            mutationResolution_147.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_147.resolved) {
                                    return [2 /*return*/, mutationResolution_147.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_216 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_216);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "feedMappings", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/FeedMappingService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("FeedMappingServiceClient");
            return {
                /**
                 * @description Retrieve a resources.FeedMapping in full detail
                 * @warning Don't use get in production!
                 * @returns resources.FeedMapping
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_217;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetFeedMappingRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getFeedMapping(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_217 = _a.sent();
                                throw this.getGoogleAdsError(err_217);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IFeedMapping
                 * @returns services.MutateFeedMappingsResponse
                 */
                create: function (feedMappings, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_148, response, mutationResolution_148, err_218, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", feedMappings);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "FeedMappingService.mutateFeedMappings",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_148 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_148.cancelled = true;
                                            mutationCancellation_148.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_148.cancelled) {
                                    return [2 /*return*/, mutationCancellation_148.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateFeedMappings(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_148 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_148.resolved = true;
                                            mutationResolution_148.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_148.resolved) {
                                    return [2 /*return*/, mutationResolution_148.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_218 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_218);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateFeedMappingsResponse
                 */
                remove: function (feedMappings, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_149, response, mutationResolution_149, err_219, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", feedMappings);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "FeedMappingService.mutateFeedMappings",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_149 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_149.cancelled = true;
                                            mutationCancellation_149.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_149.cancelled) {
                                    return [2 /*return*/, mutationCancellation_149.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateFeedMappings(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_149 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_149.resolved = true;
                                            mutationResolution_149.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_149.resolved) {
                                    return [2 /*return*/, mutationResolution_149.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_219 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_219);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "feeds", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/FeedService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("FeedServiceClient");
            return {
                /**
                 * @description Retrieve a resources.Feed in full detail
                 * @warning Don't use get in production!
                 * @returns resources.Feed
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_220;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetFeedRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getFeed(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_220 = _a.sent();
                                throw this.getGoogleAdsError(err_220);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IFeed
                 * @returns services.MutateFeedsResponse
                 */
                create: function (feeds, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_150, response, mutationResolution_150, err_221, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", feeds);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "FeedService.mutateFeeds",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_150 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_150.cancelled = true;
                                            mutationCancellation_150.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_150.cancelled) {
                                    return [2 /*return*/, mutationCancellation_150.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateFeeds(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_150 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_150.resolved = true;
                                            mutationResolution_150.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_150.resolved) {
                                    return [2 /*return*/, mutationResolution_150.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_221 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_221);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IFeed
                 * @returns services.MutateFeedsResponse
                 */
                update: function (feeds, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_151, response, mutationResolution_151, err_222, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", feeds
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.Feed);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "FeedService.mutateFeeds",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_151 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_151.cancelled = true;
                                            mutationCancellation_151.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_151.cancelled) {
                                    return [2 /*return*/, mutationCancellation_151.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateFeeds(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_151 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_151.resolved = true;
                                            mutationResolution_151.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_151.resolved) {
                                    return [2 /*return*/, mutationResolution_151.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_222 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_222);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateFeedsResponse
                 */
                remove: function (feeds, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_152, response, mutationResolution_152, err_223, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", feeds);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "FeedService.mutateFeeds",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_152 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_152.cancelled = true;
                                            mutationCancellation_152.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_152.cancelled) {
                                    return [2 /*return*/, mutationCancellation_152.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateFeeds(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_152 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_152.resolved = true;
                                            mutationResolution_152.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_152.resolved) {
                                    return [2 /*return*/, mutationResolution_152.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_223 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_223);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "keywordPlanAdGroupKeywords", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/KeywordPlanAdGroupKeywordService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("KeywordPlanAdGroupKeywordServiceClient");
            return {
                /**
                 * @description Retrieve a resources.KeywordPlanAdGroupKeyword in full detail
                 * @warning Don't use get in production!
                 * @returns resources.KeywordPlanAdGroupKeyword
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_224;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetKeywordPlanAdGroupKeywordRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getKeywordPlanAdGroupKeyword(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_224 = _a.sent();
                                throw this.getGoogleAdsError(err_224);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IKeywordPlanAdGroupKeyword
                 * @returns services.MutateKeywordPlanAdGroupKeywordsResponse
                 */
                create: function (keywordPlanAdGroupKeywords, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_153, response, mutationResolution_153, err_225, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", keywordPlanAdGroupKeywords);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "KeywordPlanAdGroupKeywordService.mutateKeywordPlanAdGroupKeywords",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_153 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_153.cancelled = true;
                                            mutationCancellation_153.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_153.cancelled) {
                                    return [2 /*return*/, mutationCancellation_153.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateKeywordPlanAdGroupKeywords(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_153 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_153.resolved = true;
                                            mutationResolution_153.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_153.resolved) {
                                    return [2 /*return*/, mutationResolution_153.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_225 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_225);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IKeywordPlanAdGroupKeyword
                 * @returns services.MutateKeywordPlanAdGroupKeywordsResponse
                 */
                update: function (keywordPlanAdGroupKeywords, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_154, response, mutationResolution_154, err_226, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", keywordPlanAdGroupKeywords
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.KeywordPlanAdGroupKeyword);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "KeywordPlanAdGroupKeywordService.mutateKeywordPlanAdGroupKeywords",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_154 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_154.cancelled = true;
                                            mutationCancellation_154.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_154.cancelled) {
                                    return [2 /*return*/, mutationCancellation_154.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateKeywordPlanAdGroupKeywords(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_154 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_154.resolved = true;
                                            mutationResolution_154.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_154.resolved) {
                                    return [2 /*return*/, mutationResolution_154.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_226 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_226);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateKeywordPlanAdGroupKeywordsResponse
                 */
                remove: function (keywordPlanAdGroupKeywords, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_155, response, mutationResolution_155, err_227, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", keywordPlanAdGroupKeywords);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "KeywordPlanAdGroupKeywordService.mutateKeywordPlanAdGroupKeywords",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_155 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_155.cancelled = true;
                                            mutationCancellation_155.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_155.cancelled) {
                                    return [2 /*return*/, mutationCancellation_155.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateKeywordPlanAdGroupKeywords(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_155 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_155.resolved = true;
                                            mutationResolution_155.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_155.resolved) {
                                    return [2 /*return*/, mutationResolution_155.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_227 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_227);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "keywordPlanAdGroups", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/KeywordPlanAdGroupService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("KeywordPlanAdGroupServiceClient");
            return {
                /**
                 * @description Retrieve a resources.KeywordPlanAdGroup in full detail
                 * @warning Don't use get in production!
                 * @returns resources.KeywordPlanAdGroup
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_228;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetKeywordPlanAdGroupRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getKeywordPlanAdGroup(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_228 = _a.sent();
                                throw this.getGoogleAdsError(err_228);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IKeywordPlanAdGroup
                 * @returns services.MutateKeywordPlanAdGroupsResponse
                 */
                create: function (keywordPlanAdGroups, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_156, response, mutationResolution_156, err_229, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", keywordPlanAdGroups);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "KeywordPlanAdGroupService.mutateKeywordPlanAdGroups",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_156 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_156.cancelled = true;
                                            mutationCancellation_156.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_156.cancelled) {
                                    return [2 /*return*/, mutationCancellation_156.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateKeywordPlanAdGroups(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_156 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_156.resolved = true;
                                            mutationResolution_156.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_156.resolved) {
                                    return [2 /*return*/, mutationResolution_156.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_229 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_229);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IKeywordPlanAdGroup
                 * @returns services.MutateKeywordPlanAdGroupsResponse
                 */
                update: function (keywordPlanAdGroups, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_157, response, mutationResolution_157, err_230, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", keywordPlanAdGroups
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.KeywordPlanAdGroup);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "KeywordPlanAdGroupService.mutateKeywordPlanAdGroups",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_157 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_157.cancelled = true;
                                            mutationCancellation_157.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_157.cancelled) {
                                    return [2 /*return*/, mutationCancellation_157.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateKeywordPlanAdGroups(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_157 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_157.resolved = true;
                                            mutationResolution_157.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_157.resolved) {
                                    return [2 /*return*/, mutationResolution_157.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_230 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_230);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateKeywordPlanAdGroupsResponse
                 */
                remove: function (keywordPlanAdGroups, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_158, response, mutationResolution_158, err_231, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", keywordPlanAdGroups);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "KeywordPlanAdGroupService.mutateKeywordPlanAdGroups",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_158 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_158.cancelled = true;
                                            mutationCancellation_158.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_158.cancelled) {
                                    return [2 /*return*/, mutationCancellation_158.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateKeywordPlanAdGroups(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_158 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_158.resolved = true;
                                            mutationResolution_158.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_158.resolved) {
                                    return [2 /*return*/, mutationResolution_158.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_231 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_231);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "keywordPlanCampaignKeywords", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/KeywordPlanCampaignKeywordService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("KeywordPlanCampaignKeywordServiceClient");
            return {
                /**
                 * @description Retrieve a resources.KeywordPlanCampaignKeyword in full detail
                 * @warning Don't use get in production!
                 * @returns resources.KeywordPlanCampaignKeyword
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_232;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetKeywordPlanCampaignKeywordRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getKeywordPlanCampaignKeyword(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_232 = _a.sent();
                                throw this.getGoogleAdsError(err_232);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IKeywordPlanCampaignKeyword
                 * @returns services.MutateKeywordPlanCampaignKeywordsResponse
                 */
                create: function (keywordPlanCampaignKeywords, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_159, response, mutationResolution_159, err_233, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", keywordPlanCampaignKeywords);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "KeywordPlanCampaignKeywordService.mutateKeywordPlanCampaignKeywords",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_159 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_159.cancelled = true;
                                            mutationCancellation_159.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_159.cancelled) {
                                    return [2 /*return*/, mutationCancellation_159.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateKeywordPlanCampaignKeywords(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_159 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_159.resolved = true;
                                            mutationResolution_159.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_159.resolved) {
                                    return [2 /*return*/, mutationResolution_159.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_233 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_233);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IKeywordPlanCampaignKeyword
                 * @returns services.MutateKeywordPlanCampaignKeywordsResponse
                 */
                update: function (keywordPlanCampaignKeywords, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_160, response, mutationResolution_160, err_234, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", keywordPlanCampaignKeywords
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.KeywordPlanCampaignKeyword);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "KeywordPlanCampaignKeywordService.mutateKeywordPlanCampaignKeywords",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_160 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_160.cancelled = true;
                                            mutationCancellation_160.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_160.cancelled) {
                                    return [2 /*return*/, mutationCancellation_160.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateKeywordPlanCampaignKeywords(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_160 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_160.resolved = true;
                                            mutationResolution_160.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_160.resolved) {
                                    return [2 /*return*/, mutationResolution_160.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_234 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_234);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateKeywordPlanCampaignKeywordsResponse
                 */
                remove: function (keywordPlanCampaignKeywords, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_161, response, mutationResolution_161, err_235, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", keywordPlanCampaignKeywords);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "KeywordPlanCampaignKeywordService.mutateKeywordPlanCampaignKeywords",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_161 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_161.cancelled = true;
                                            mutationCancellation_161.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_161.cancelled) {
                                    return [2 /*return*/, mutationCancellation_161.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateKeywordPlanCampaignKeywords(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_161 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_161.resolved = true;
                                            mutationResolution_161.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_161.resolved) {
                                    return [2 /*return*/, mutationResolution_161.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_235 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_235);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "keywordPlanCampaigns", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/KeywordPlanCampaignService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("KeywordPlanCampaignServiceClient");
            return {
                /**
                 * @description Retrieve a resources.KeywordPlanCampaign in full detail
                 * @warning Don't use get in production!
                 * @returns resources.KeywordPlanCampaign
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_236;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetKeywordPlanCampaignRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getKeywordPlanCampaign(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_236 = _a.sent();
                                throw this.getGoogleAdsError(err_236);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IKeywordPlanCampaign
                 * @returns services.MutateKeywordPlanCampaignsResponse
                 */
                create: function (keywordPlanCampaigns, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_162, response, mutationResolution_162, err_237, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", keywordPlanCampaigns);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "KeywordPlanCampaignService.mutateKeywordPlanCampaigns",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_162 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_162.cancelled = true;
                                            mutationCancellation_162.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_162.cancelled) {
                                    return [2 /*return*/, mutationCancellation_162.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateKeywordPlanCampaigns(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_162 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_162.resolved = true;
                                            mutationResolution_162.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_162.resolved) {
                                    return [2 /*return*/, mutationResolution_162.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_237 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_237);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IKeywordPlanCampaign
                 * @returns services.MutateKeywordPlanCampaignsResponse
                 */
                update: function (keywordPlanCampaigns, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_163, response, mutationResolution_163, err_238, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", keywordPlanCampaigns
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.KeywordPlanCampaign);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "KeywordPlanCampaignService.mutateKeywordPlanCampaigns",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_163 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_163.cancelled = true;
                                            mutationCancellation_163.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_163.cancelled) {
                                    return [2 /*return*/, mutationCancellation_163.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateKeywordPlanCampaigns(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_163 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_163.resolved = true;
                                            mutationResolution_163.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_163.resolved) {
                                    return [2 /*return*/, mutationResolution_163.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_238 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_238);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateKeywordPlanCampaignsResponse
                 */
                remove: function (keywordPlanCampaigns, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_164, response, mutationResolution_164, err_239, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", keywordPlanCampaigns);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "KeywordPlanCampaignService.mutateKeywordPlanCampaigns",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_164 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_164.cancelled = true;
                                            mutationCancellation_164.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_164.cancelled) {
                                    return [2 /*return*/, mutationCancellation_164.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateKeywordPlanCampaigns(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_164 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_164.resolved = true;
                                            mutationResolution_164.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_164.resolved) {
                                    return [2 /*return*/, mutationResolution_164.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_239 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_239);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "keywordPlans", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/KeywordPlanService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("KeywordPlanServiceClient");
            return {
                /**
                 * @description Retrieve a resources.KeywordPlan in full detail
                 * @warning Don't use get in production!
                 * @returns resources.KeywordPlan
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_240;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetKeywordPlanRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getKeywordPlan(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_240 = _a.sent();
                                throw this.getGoogleAdsError(err_240);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IKeywordPlan
                 * @returns services.MutateKeywordPlansResponse
                 */
                create: function (keywordPlans, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_165, response, mutationResolution_165, err_241, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", keywordPlans);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "KeywordPlanService.mutateKeywordPlans",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_165 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_165.cancelled = true;
                                            mutationCancellation_165.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_165.cancelled) {
                                    return [2 /*return*/, mutationCancellation_165.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateKeywordPlans(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_165 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_165.resolved = true;
                                            mutationResolution_165.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_165.resolved) {
                                    return [2 /*return*/, mutationResolution_165.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_241 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_241);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IKeywordPlan
                 * @returns services.MutateKeywordPlansResponse
                 */
                update: function (keywordPlans, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_166, response, mutationResolution_166, err_242, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", keywordPlans
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.KeywordPlan);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "KeywordPlanService.mutateKeywordPlans",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_166 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_166.cancelled = true;
                                            mutationCancellation_166.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_166.cancelled) {
                                    return [2 /*return*/, mutationCancellation_166.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateKeywordPlans(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_166 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_166.resolved = true;
                                            mutationResolution_166.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_166.resolved) {
                                    return [2 /*return*/, mutationResolution_166.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_242 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_242);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateKeywordPlansResponse
                 */
                remove: function (keywordPlans, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_167, response, mutationResolution_167, err_243, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", keywordPlans);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "KeywordPlanService.mutateKeywordPlans",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_167 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_167.cancelled = true;
                                            mutationCancellation_167.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_167.cancelled) {
                                    return [2 /*return*/, mutationCancellation_167.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateKeywordPlans(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_167 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_167.resolved = true;
                                            mutationResolution_167.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_167.resolved) {
                                    return [2 /*return*/, mutationResolution_167.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_243 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_243);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/KeywordPlanService#generateforecastcurve
                 */
                generateForecastCurve: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_244;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.generateForecastCurve(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_244 = _a.sent();
                                throw this.getGoogleAdsError(err_244);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/KeywordPlanService#generateforecasttimeseries
                 */
                generateForecastTimeSeries: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_245;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.generateForecastTimeSeries(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_245 = _a.sent();
                                throw this.getGoogleAdsError(err_245);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/KeywordPlanService#generateforecastmetrics
                 */
                generateForecastMetrics: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_246;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.generateForecastMetrics(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_246 = _a.sent();
                                throw this.getGoogleAdsError(err_246);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/KeywordPlanService#generatehistoricalmetrics
                 */
                generateHistoricalMetrics: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_247;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.generateHistoricalMetrics(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_247 = _a.sent();
                                throw this.getGoogleAdsError(err_247);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "labels", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/LabelService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("LabelServiceClient");
            return {
                /**
                 * @description Retrieve a resources.Label in full detail
                 * @warning Don't use get in production!
                 * @returns resources.Label
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_248;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetLabelRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getLabel(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_248 = _a.sent();
                                throw this.getGoogleAdsError(err_248);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ILabel
                 * @returns services.MutateLabelsResponse
                 */
                create: function (labels, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_168, response, mutationResolution_168, err_249, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", labels);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "LabelService.mutateLabels",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_168 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_168.cancelled = true;
                                            mutationCancellation_168.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_168.cancelled) {
                                    return [2 /*return*/, mutationCancellation_168.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateLabels(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_168 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_168.resolved = true;
                                            mutationResolution_168.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_168.resolved) {
                                    return [2 /*return*/, mutationResolution_168.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_249 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_249);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ILabel
                 * @returns services.MutateLabelsResponse
                 */
                update: function (labels, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_169, response, mutationResolution_169, err_250, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", labels
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.Label);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "LabelService.mutateLabels",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_169 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_169.cancelled = true;
                                            mutationCancellation_169.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_169.cancelled) {
                                    return [2 /*return*/, mutationCancellation_169.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateLabels(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_169 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_169.resolved = true;
                                            mutationResolution_169.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_169.resolved) {
                                    return [2 /*return*/, mutationResolution_169.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_250 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_250);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateLabelsResponse
                 */
                remove: function (labels, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_170, response, mutationResolution_170, err_251, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", labels);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "LabelService.mutateLabels",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_170 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_170.cancelled = true;
                                            mutationCancellation_170.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_170.cancelled) {
                                    return [2 /*return*/, mutationCancellation_170.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateLabels(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_170 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_170.resolved = true;
                                            mutationResolution_170.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_170.resolved) {
                                    return [2 /*return*/, mutationResolution_170.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_251 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_251);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "mediaFiles", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/MediaFileService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("MediaFileServiceClient");
            return {
                /**
                 * @description Retrieve a resources.MediaFile in full detail
                 * @warning Don't use get in production!
                 * @returns resources.MediaFile
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_252;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetMediaFileRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getMediaFile(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_252 = _a.sent();
                                throw this.getGoogleAdsError(err_252);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IMediaFile
                 * @returns services.MutateMediaFilesResponse
                 */
                create: function (mediaFiles, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_171, response, mutationResolution_171, err_253, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", mediaFiles);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "MediaFileService.mutateMediaFiles",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_171 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_171.cancelled = true;
                                            mutationCancellation_171.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_171.cancelled) {
                                    return [2 /*return*/, mutationCancellation_171.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateMediaFiles(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_171 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_171.resolved = true;
                                            mutationResolution_171.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_171.resolved) {
                                    return [2 /*return*/, mutationResolution_171.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_253 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_253);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "remarketingActions", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/RemarketingActionService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("RemarketingActionServiceClient");
            return {
                /**
                 * @description Retrieve a resources.RemarketingAction in full detail
                 * @warning Don't use get in production!
                 * @returns resources.RemarketingAction
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_254;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetRemarketingActionRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getRemarketingAction(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_254 = _a.sent();
                                throw this.getGoogleAdsError(err_254);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IRemarketingAction
                 * @returns services.MutateRemarketingActionsResponse
                 */
                create: function (remarketingActions, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_172, response, mutationResolution_172, err_255, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", remarketingActions);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "RemarketingActionService.mutateRemarketingActions",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_172 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_172.cancelled = true;
                                            mutationCancellation_172.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_172.cancelled) {
                                    return [2 /*return*/, mutationCancellation_172.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateRemarketingActions(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_172 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_172.resolved = true;
                                            mutationResolution_172.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_172.resolved) {
                                    return [2 /*return*/, mutationResolution_172.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_255 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_255);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IRemarketingAction
                 * @returns services.MutateRemarketingActionsResponse
                 */
                update: function (remarketingActions, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_173, response, mutationResolution_173, err_256, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", remarketingActions
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.RemarketingAction);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "RemarketingActionService.mutateRemarketingActions",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_173 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_173.cancelled = true;
                                            mutationCancellation_173.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_173.cancelled) {
                                    return [2 /*return*/, mutationCancellation_173.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateRemarketingActions(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_173 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_173.resolved = true;
                                            mutationResolution_173.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_173.resolved) {
                                    return [2 /*return*/, mutationResolution_173.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_256 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_256);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "sharedCriteria", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/SharedCriterionService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("SharedCriterionServiceClient");
            return {
                /**
                 * @description Retrieve a resources.SharedCriterion in full detail
                 * @warning Don't use get in production!
                 * @returns resources.SharedCriterion
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_257;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetSharedCriterionRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getSharedCriterion(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_257 = _a.sent();
                                throw this.getGoogleAdsError(err_257);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ISharedCriterion
                 * @returns services.MutateSharedCriteriaResponse
                 */
                create: function (sharedCriteria, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_174, response, mutationResolution_174, err_258, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", sharedCriteria);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "SharedCriterionService.mutateSharedCriteria",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_174 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_174.cancelled = true;
                                            mutationCancellation_174.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_174.cancelled) {
                                    return [2 /*return*/, mutationCancellation_174.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateSharedCriteria(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_174 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_174.resolved = true;
                                            mutationResolution_174.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_174.resolved) {
                                    return [2 /*return*/, mutationResolution_174.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_258 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_258);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateSharedCriteriaResponse
                 */
                remove: function (sharedCriteria, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_175, response, mutationResolution_175, err_259, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", sharedCriteria);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "SharedCriterionService.mutateSharedCriteria",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_175 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_175.cancelled = true;
                                            mutationCancellation_175.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_175.cancelled) {
                                    return [2 /*return*/, mutationCancellation_175.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateSharedCriteria(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_175 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_175.resolved = true;
                                            mutationResolution_175.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_175.resolved) {
                                    return [2 /*return*/, mutationResolution_175.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_259 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_259);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "sharedSets", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/SharedSetService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("SharedSetServiceClient");
            return {
                /**
                 * @description Retrieve a resources.SharedSet in full detail
                 * @warning Don't use get in production!
                 * @returns resources.SharedSet
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_260;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetSharedSetRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getSharedSet(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_260 = _a.sent();
                                throw this.getGoogleAdsError(err_260);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ISharedSet
                 * @returns services.MutateSharedSetsResponse
                 */
                create: function (sharedSets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_176, response, mutationResolution_176, err_261, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", sharedSets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "SharedSetService.mutateSharedSets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_176 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_176.cancelled = true;
                                            mutationCancellation_176.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_176.cancelled) {
                                    return [2 /*return*/, mutationCancellation_176.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateSharedSets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_176 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_176.resolved = true;
                                            mutationResolution_176.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_176.resolved) {
                                    return [2 /*return*/, mutationResolution_176.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_261 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_261);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ISharedSet
                 * @returns services.MutateSharedSetsResponse
                 */
                update: function (sharedSets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_177, response, mutationResolution_177, err_262, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", sharedSets
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.SharedSet);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "SharedSetService.mutateSharedSets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_177 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_177.cancelled = true;
                                            mutationCancellation_177.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_177.cancelled) {
                                    return [2 /*return*/, mutationCancellation_177.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateSharedSets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_177 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_177.resolved = true;
                                            mutationResolution_177.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_177.resolved) {
                                    return [2 /*return*/, mutationResolution_177.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_262 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_262);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateSharedSetsResponse
                 */
                remove: function (sharedSets, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_178, response, mutationResolution_178, err_263, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", sharedSets);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "SharedSetService.mutateSharedSets",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_178 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_178.cancelled = true;
                                            mutationCancellation_178.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_178.cancelled) {
                                    return [2 /*return*/, mutationCancellation_178.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateSharedSets(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_178 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_178.resolved = true;
                                            mutationResolution_178.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_178.resolved) {
                                    return [2 /*return*/, mutationResolution_178.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_263 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_263);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "smartCampaignSettings", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/SmartCampaignSettingService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("SmartCampaignSettingServiceClient");
            return {
                /**
                 * @description Retrieve a resources.SmartCampaignSetting in full detail
                 * @warning Don't use get in production!
                 * @returns resources.SmartCampaignSetting
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_264;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetSmartCampaignSettingRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getSmartCampaignSetting(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_264 = _a.sent();
                                throw this.getGoogleAdsError(err_264);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ISmartCampaignSetting
                 * @returns services.MutateSmartCampaignSettingsResponse
                 */
                update: function (smartCampaignSettings, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_179, response, mutationResolution_179, err_265, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", smartCampaignSettings
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.SmartCampaignSetting);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "SmartCampaignSettingService.mutateSmartCampaignSettings",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_179 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_179.cancelled = true;
                                            mutationCancellation_179.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_179.cancelled) {
                                    return [2 /*return*/, mutationCancellation_179.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateSmartCampaignSettings(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_179 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_179.resolved = true;
                                            mutationResolution_179.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_179.resolved) {
                                    return [2 /*return*/, mutationResolution_179.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_265 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_265);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "userLists", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/UserListService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("UserListServiceClient");
            return {
                /**
                 * @description Retrieve a resources.UserList in full detail
                 * @warning Don't use get in production!
                 * @returns resources.UserList
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_266;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetUserListRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getUserList(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_266 = _a.sent();
                                throw this.getGoogleAdsError(err_266);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IUserList
                 * @returns services.MutateUserListsResponse
                 */
                create: function (userLists, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_180, response, mutationResolution_180, err_267, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", userLists);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "UserListService.mutateUserLists",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_180 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_180.cancelled = true;
                                            mutationCancellation_180.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_180.cancelled) {
                                    return [2 /*return*/, mutationCancellation_180.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateUserLists(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_180 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_180.resolved = true;
                                            mutationResolution_180.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_180.resolved) {
                                    return [2 /*return*/, mutationResolution_180.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_267 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_267);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IUserList
                 * @returns services.MutateUserListsResponse
                 */
                update: function (userLists, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_181, response, mutationResolution_181, err_268, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", userLists
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.UserList);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "UserListService.mutateUserLists",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_181 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_181.cancelled = true;
                                            mutationCancellation_181.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_181.cancelled) {
                                    return [2 /*return*/, mutationCancellation_181.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateUserLists(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_181 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_181.resolved = true;
                                            mutationResolution_181.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_181.resolved) {
                                    return [2 /*return*/, mutationResolution_181.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_268 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_268);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateUserListsResponse
                 */
                remove: function (userLists, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_182, response, mutationResolution_182, err_269, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", userLists);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "UserListService.mutateUserLists",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_182 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_182.cancelled = true;
                                            mutationCancellation_182.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_182.cancelled) {
                                    return [2 /*return*/, mutationCancellation_182.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateUserLists(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_182 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: this.decodePartialFailureError(response), resolve: function (res) {
                                            mutationResolution_182.resolved = true;
                                            mutationResolution_182.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_182.resolved) {
                                    return [2 /*return*/, mutationResolution_182.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, this.decodePartialFailureError(response)];
                            case 6:
                                err_269 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_269);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "biddingStrategySimulations", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/BiddingStrategySimulationService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("BiddingStrategySimulationServiceClient");
            return {
                /**
                 * @description Retrieve a resources.BiddingStrategySimulation in full detail
                 * @warning Don't use get in production!
                 * @returns resources.BiddingStrategySimulation
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_270;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetBiddingStrategySimulationRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getBiddingStrategySimulation(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_270 = _a.sent();
                                throw this.getGoogleAdsError(err_270);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "billingSetups", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/BillingSetupService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("BillingSetupServiceClient");
            return {
                /**
                 * @description Retrieve a resources.BillingSetup in full detail
                 * @warning Don't use get in production!
                 * @returns resources.BillingSetup
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_271;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetBillingSetupRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getBillingSetup(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_271 = _a.sent();
                                throw this.getGoogleAdsError(err_271);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.IBillingSetup
                 * @returns services.MutateBillingSetupResponse
                 */
                create: function (billingSetups, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_183, response, mutationResolution_183, err_272, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", billingSetups);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "BillingSetupService.mutateBillingSetup",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_183 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_183.cancelled = true;
                                            mutationCancellation_183.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_183.cancelled) {
                                    return [2 /*return*/, mutationCancellation_183.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateBillingSetup(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_183 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_183.resolved = true;
                                            mutationResolution_183.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_183.resolved) {
                                    return [2 /*return*/, mutationResolution_183.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_272 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_272);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateBillingSetupResponse
                 */
                remove: function (billingSetups, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_184, response, mutationResolution_184, err_273, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", billingSetups);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "BillingSetupService.mutateBillingSetup",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_184 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_184.cancelled = true;
                                            mutationCancellation_184.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_184.cancelled) {
                                    return [2 /*return*/, mutationCancellation_184.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateBillingSetup(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_184 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_184.resolved = true;
                                            mutationResolution_184.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_184.resolved) {
                                    return [2 /*return*/, mutationResolution_184.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_273 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_273);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "campaignAudienceViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignAudienceViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CampaignAudienceViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CampaignAudienceView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CampaignAudienceView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_274;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCampaignAudienceViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCampaignAudienceView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_274 = _a.sent();
                                throw this.getGoogleAdsError(err_274);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "campaignCriterionSimulations", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignCriterionSimulationService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CampaignCriterionSimulationServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CampaignCriterionSimulation in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CampaignCriterionSimulation
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_275;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCampaignCriterionSimulationRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCampaignCriterionSimulation(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_275 = _a.sent();
                                throw this.getGoogleAdsError(err_275);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "campaignSimulations", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CampaignSimulationService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CampaignSimulationServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CampaignSimulation in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CampaignSimulation
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_276;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCampaignSimulationRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCampaignSimulation(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_276 = _a.sent();
                                throw this.getGoogleAdsError(err_276);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "carrierConstants", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CarrierConstantService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CarrierConstantServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CarrierConstant in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CarrierConstant
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_277;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCarrierConstantRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCarrierConstant(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_277 = _a.sent();
                                throw this.getGoogleAdsError(err_277);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "changeStatuses", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ChangeStatusService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("ChangeStatusServiceClient");
            return {
                /**
                 * @description Retrieve a resources.ChangeStatus in full detail
                 * @warning Don't use get in production!
                 * @returns resources.ChangeStatus
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_278;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetChangeStatusRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getChangeStatus(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_278 = _a.sent();
                                throw this.getGoogleAdsError(err_278);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "clickViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ClickViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("ClickViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.ClickView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.ClickView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_279;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetClickViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getClickView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_279 = _a.sent();
                                throw this.getGoogleAdsError(err_279);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "combinedAudiences", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CombinedAudienceService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CombinedAudienceServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CombinedAudience in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CombinedAudience
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_280;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCombinedAudienceRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCombinedAudience(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_280 = _a.sent();
                                throw this.getGoogleAdsError(err_280);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "conversionAdjustmentUploads", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ConversionAdjustmentUploadService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("ConversionAdjustmentUploadServiceClient");
            return {
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ConversionAdjustmentUploadService#uploadconversionadjustments
                 */
                uploadConversionAdjustments: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_281;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.uploadConversionAdjustments(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_281 = _a.sent();
                                throw this.getGoogleAdsError(err_281);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "conversionUploads", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ConversionUploadService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("ConversionUploadServiceClient");
            return {
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ConversionUploadService#uploadclickconversions
                 */
                uploadClickConversions: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_282;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.uploadClickConversions(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_282 = _a.sent();
                                throw this.getGoogleAdsError(err_282);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ConversionUploadService#uploadcallconversions
                 */
                uploadCallConversions: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_283;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.uploadCallConversions(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_283 = _a.sent();
                                throw this.getGoogleAdsError(err_283);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "currencyConstants", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CurrencyConstantService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CurrencyConstantServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CurrencyConstant in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CurrencyConstant
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_284;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCurrencyConstantRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCurrencyConstant(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_284 = _a.sent();
                                throw this.getGoogleAdsError(err_284);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "customAudiences", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomAudienceService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CustomAudienceServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CustomAudience in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CustomAudience
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_285;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCustomAudienceRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCustomAudience(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_285 = _a.sent();
                                throw this.getGoogleAdsError(err_285);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICustomAudience
                 * @returns services.MutateCustomAudiencesResponse
                 */
                create: function (customAudiences, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_185, response, mutationResolution_185, err_286, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", customAudiences);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomAudienceService.mutateCustomAudiences",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_185 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_185.cancelled = true;
                                            mutationCancellation_185.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_185.cancelled) {
                                    return [2 /*return*/, mutationCancellation_185.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomAudiences(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_185 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_185.resolved = true;
                                            mutationResolution_185.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_185.resolved) {
                                    return [2 /*return*/, mutationResolution_185.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_286 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_286);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICustomAudience
                 * @returns services.MutateCustomAudiencesResponse
                 */
                update: function (customAudiences, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_186, response, mutationResolution_186, err_287, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", customAudiences
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CustomAudience);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomAudienceService.mutateCustomAudiences",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_186 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_186.cancelled = true;
                                            mutationCancellation_186.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_186.cancelled) {
                                    return [2 /*return*/, mutationCancellation_186.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomAudiences(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_186 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_186.resolved = true;
                                            mutationResolution_186.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_186.resolved) {
                                    return [2 /*return*/, mutationResolution_186.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_287 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_287);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCustomAudiencesResponse
                 */
                remove: function (customAudiences, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_187, response, mutationResolution_187, err_288, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", customAudiences);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomAudienceService.mutateCustomAudiences",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_187 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_187.cancelled = true;
                                            mutationCancellation_187.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_187.cancelled) {
                                    return [2 /*return*/, mutationCancellation_187.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomAudiences(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_187 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_187.resolved = true;
                                            mutationResolution_187.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_187.resolved) {
                                    return [2 /*return*/, mutationResolution_187.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_288 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_288);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "customInterests", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomInterestService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CustomInterestServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CustomInterest in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CustomInterest
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_289;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCustomInterestRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCustomInterest(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_289 = _a.sent();
                                throw this.getGoogleAdsError(err_289);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICustomInterest
                 * @returns services.MutateCustomInterestsResponse
                 */
                create: function (customInterests, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_188, response, mutationResolution_188, err_290, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", customInterests);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomInterestService.mutateCustomInterests",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_188 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_188.cancelled = true;
                                            mutationCancellation_188.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_188.cancelled) {
                                    return [2 /*return*/, mutationCancellation_188.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomInterests(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_188 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_188.resolved = true;
                                            mutationResolution_188.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_188.resolved) {
                                    return [2 /*return*/, mutationResolution_188.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_290 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_290);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICustomInterest
                 * @returns services.MutateCustomInterestsResponse
                 */
                update: function (customInterests, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_189, response, mutationResolution_189, err_291, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", customInterests
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CustomInterest);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomInterestService.mutateCustomInterests",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_189 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_189.cancelled = true;
                                            mutationCancellation_189.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_189.cancelled) {
                                    return [2 /*return*/, mutationCancellation_189.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomInterests(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_189 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_189.resolved = true;
                                            mutationResolution_189.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_189.resolved) {
                                    return [2 /*return*/, mutationResolution_189.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_291 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_291);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "customerClientLinks", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomerClientLinkService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CustomerClientLinkServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CustomerClientLink in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CustomerClientLink
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_292;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCustomerClientLinkRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCustomerClientLink(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_292 = _a.sent();
                                throw this.getGoogleAdsError(err_292);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICustomerClientLink
                 * @returns services.MutateCustomerClientLinkResponse
                 */
                create: function (customerClientLinks, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_190, response, mutationResolution_190, err_293, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", customerClientLinks);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerClientLinkService.mutateCustomerClientLink",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_190 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_190.cancelled = true;
                                            mutationCancellation_190.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_190.cancelled) {
                                    return [2 /*return*/, mutationCancellation_190.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerClientLink(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_190 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_190.resolved = true;
                                            mutationResolution_190.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_190.resolved) {
                                    return [2 /*return*/, mutationResolution_190.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_293 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_293);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICustomerClientLink
                 * @returns services.MutateCustomerClientLinkResponse
                 */
                update: function (customerClientLinks, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_191, response, mutationResolution_191, err_294, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", customerClientLinks
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CustomerClientLink);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerClientLinkService.mutateCustomerClientLink",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_191 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_191.cancelled = true;
                                            mutationCancellation_191.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_191.cancelled) {
                                    return [2 /*return*/, mutationCancellation_191.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerClientLink(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_191 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_191.resolved = true;
                                            mutationResolution_191.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_191.resolved) {
                                    return [2 /*return*/, mutationResolution_191.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_294 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_294);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "customerClients", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomerClientService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CustomerClientServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CustomerClient in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CustomerClient
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_295;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCustomerClientRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCustomerClient(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_295 = _a.sent();
                                throw this.getGoogleAdsError(err_295);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "customerManagerLinks", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomerManagerLinkService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CustomerManagerLinkServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CustomerManagerLink in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CustomerManagerLink
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_296;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCustomerManagerLinkRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCustomerManagerLink(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_296 = _a.sent();
                                throw this.getGoogleAdsError(err_296);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICustomerManagerLink
                 * @returns services.MutateCustomerManagerLinkResponse
                 */
                update: function (customerManagerLinks, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_192, response, mutationResolution_192, err_297, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", customerManagerLinks
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CustomerManagerLink);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerManagerLinkService.mutateCustomerManagerLink",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_192 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_192.cancelled = true;
                                            mutationCancellation_192.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_192.cancelled) {
                                    return [2 /*return*/, mutationCancellation_192.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerManagerLink(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_192 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_192.resolved = true;
                                            mutationResolution_192.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_192.resolved) {
                                    return [2 /*return*/, mutationResolution_192.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_297 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_297);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomerManagerLinkService#movemanagerlink
                 */
                moveManagerLink: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_298;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.moveManagerLink(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_298 = _a.sent();
                                throw this.getGoogleAdsError(err_298);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "customerUserAccessInvitations", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomerUserAccessInvitationService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CustomerUserAccessInvitationServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CustomerUserAccessInvitation in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CustomerUserAccessInvitation
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_299;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCustomerUserAccessInvitationRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCustomerUserAccessInvitation(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_299 = _a.sent();
                                throw this.getGoogleAdsError(err_299);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description create resources of type resources.ICustomerUserAccessInvitation
                 * @returns services.MutateCustomerUserAccessInvitationResponse
                 */
                create: function (customerUserAccessInvitations, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_193, response, mutationResolution_193, err_300, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("create", customerUserAccessInvitations);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerUserAccessInvitationService.mutateCustomerUserAccessInvitation",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_193 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_193.cancelled = true;
                                            mutationCancellation_193.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_193.cancelled) {
                                    return [2 /*return*/, mutationCancellation_193.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerUserAccessInvitation(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_193 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_193.resolved = true;
                                            mutationResolution_193.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_193.resolved) {
                                    return [2 /*return*/, mutationResolution_193.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_300 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_300);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCustomerUserAccessInvitationResponse
                 */
                remove: function (customerUserAccessInvitations, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_194, response, mutationResolution_194, err_301, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", customerUserAccessInvitations);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerUserAccessInvitationService.mutateCustomerUserAccessInvitation",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_194 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_194.cancelled = true;
                                            mutationCancellation_194.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_194.cancelled) {
                                    return [2 /*return*/, mutationCancellation_194.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerUserAccessInvitation(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_194 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_194.resolved = true;
                                            mutationResolution_194.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_194.resolved) {
                                    return [2 /*return*/, mutationResolution_194.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_301 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_301);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "customerUserAccesses", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/CustomerUserAccessService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("CustomerUserAccessServiceClient");
            return {
                /**
                 * @description Retrieve a resources.CustomerUserAccess in full detail
                 * @warning Don't use get in production!
                 * @returns resources.CustomerUserAccess
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_302;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetCustomerUserAccessRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getCustomerUserAccess(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_302 = _a.sent();
                                throw this.getGoogleAdsError(err_302);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.ICustomerUserAccess
                 * @returns services.MutateCustomerUserAccessResponse
                 */
                update: function (customerUserAccesses, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_195, response, mutationResolution_195, err_303, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", customerUserAccesses
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.CustomerUserAccess);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerUserAccessService.mutateCustomerUserAccess",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_195 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_195.cancelled = true;
                                            mutationCancellation_195.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_195.cancelled) {
                                    return [2 /*return*/, mutationCancellation_195.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerUserAccess(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_195 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_195.resolved = true;
                                            mutationResolution_195.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_195.resolved) {
                                    return [2 /*return*/, mutationResolution_195.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_303 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_303);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateCustomerUserAccessResponse
                 */
                remove: function (customerUserAccesses, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_196, response, mutationResolution_196, err_304, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", customerUserAccesses);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "CustomerUserAccessService.mutateCustomerUserAccess",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_196 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_196.cancelled = true;
                                            mutationCancellation_196.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_196.cancelled) {
                                    return [2 /*return*/, mutationCancellation_196.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateCustomerUserAccess(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_196 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_196.resolved = true;
                                            mutationResolution_196.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_196.resolved) {
                                    return [2 /*return*/, mutationResolution_196.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_304 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_304);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "detailPlacementViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/DetailPlacementViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("DetailPlacementViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.DetailPlacementView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.DetailPlacementView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_305;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetDetailPlacementViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getDetailPlacementView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_305 = _a.sent();
                                throw this.getGoogleAdsError(err_305);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "detailedDemographics", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/DetailedDemographicService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("DetailedDemographicServiceClient");
            return {
                /**
                 * @description Retrieve a resources.DetailedDemographic in full detail
                 * @warning Don't use get in production!
                 * @returns resources.DetailedDemographic
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_306;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetDetailedDemographicRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getDetailedDemographic(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_306 = _a.sent();
                                throw this.getGoogleAdsError(err_306);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "displayKeywordViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/DisplayKeywordViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("DisplayKeywordViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.DisplayKeywordView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.DisplayKeywordView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_307;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetDisplayKeywordViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getDisplayKeywordView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_307 = _a.sent();
                                throw this.getGoogleAdsError(err_307);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "distanceViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/DistanceViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("DistanceViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.DistanceView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.DistanceView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_308;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetDistanceViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getDistanceView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_308 = _a.sent();
                                throw this.getGoogleAdsError(err_308);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "domainCategories", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/DomainCategoryService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("DomainCategoryServiceClient");
            return {
                /**
                 * @description Retrieve a resources.DomainCategory in full detail
                 * @warning Don't use get in production!
                 * @returns resources.DomainCategory
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_309;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetDomainCategoryRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getDomainCategory(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_309 = _a.sent();
                                throw this.getGoogleAdsError(err_309);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "dynamicSearchAdsSearchTermViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/DynamicSearchAdsSearchTermViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("DynamicSearchAdsSearchTermViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.DynamicSearchAdsSearchTermView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.DynamicSearchAdsSearchTermView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_310;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetDynamicSearchAdsSearchTermViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getDynamicSearchAdsSearchTermView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_310 = _a.sent();
                                throw this.getGoogleAdsError(err_310);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "expandedLandingPageViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ExpandedLandingPageViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("ExpandedLandingPageViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.ExpandedLandingPageView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.ExpandedLandingPageView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_311;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetExpandedLandingPageViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getExpandedLandingPageView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_311 = _a.sent();
                                throw this.getGoogleAdsError(err_311);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "feedPlaceholderViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/FeedPlaceholderViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("FeedPlaceholderViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.FeedPlaceholderView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.FeedPlaceholderView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_312;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetFeedPlaceholderViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getFeedPlaceholderView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_312 = _a.sent();
                                throw this.getGoogleAdsError(err_312);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "genderViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/GenderViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("GenderViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.GenderView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.GenderView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_313;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetGenderViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getGenderView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_313 = _a.sent();
                                throw this.getGoogleAdsError(err_313);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "geoTargetConstants", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/GeoTargetConstantService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("GeoTargetConstantServiceClient");
            return {
                /**
                 * @description Retrieve a resources.GeoTargetConstant in full detail
                 * @warning Don't use get in production!
                 * @returns resources.GeoTargetConstant
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_314;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetGeoTargetConstantRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getGeoTargetConstant(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_314 = _a.sent();
                                throw this.getGoogleAdsError(err_314);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/GeoTargetConstantService#suggestgeotargetconstants
                 */
                suggestGeoTargetConstants: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_315;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.suggestGeoTargetConstants(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_315 = _a.sent();
                                throw this.getGoogleAdsError(err_315);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "geographicViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/GeographicViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("GeographicViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.GeographicView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.GeographicView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_316;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetGeographicViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getGeographicView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_316 = _a.sent();
                                throw this.getGoogleAdsError(err_316);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "groupPlacementViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/GroupPlacementViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("GroupPlacementViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.GroupPlacementView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.GroupPlacementView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_317;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetGroupPlacementViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getGroupPlacementView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_317 = _a.sent();
                                throw this.getGoogleAdsError(err_317);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "hotelGroupViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/HotelGroupViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("HotelGroupViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.HotelGroupView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.HotelGroupView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_318;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetHotelGroupViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getHotelGroupView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_318 = _a.sent();
                                throw this.getGoogleAdsError(err_318);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "hotelPerformanceViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/HotelPerformanceViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("HotelPerformanceViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.HotelPerformanceView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.HotelPerformanceView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_319;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetHotelPerformanceViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getHotelPerformanceView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_319 = _a.sent();
                                throw this.getGoogleAdsError(err_319);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "incomeRangeViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/IncomeRangeViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("IncomeRangeViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.IncomeRangeView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.IncomeRangeView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_320;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetIncomeRangeViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getIncomeRangeView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_320 = _a.sent();
                                throw this.getGoogleAdsError(err_320);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "invoices", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/InvoiceService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("InvoiceServiceClient");
            return {
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/InvoiceService#listinvoices
                 */
                listInvoices: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_321;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.listInvoices(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_321 = _a.sent();
                                throw this.getGoogleAdsError(err_321);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "keywordPlanIdeas", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/KeywordPlanIdeaService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("KeywordPlanIdeaServiceClient");
            return {
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/KeywordPlanIdeaService#generatekeywordideas
                 */
                generateKeywordIdeas: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_322;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.generateKeywordIdeas(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_322 = _a.sent();
                                throw this.getGoogleAdsError(err_322);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "keywordThemeConstants", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/KeywordThemeConstantService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("KeywordThemeConstantServiceClient");
            return {
                /**
                 * @description Retrieve a resources.KeywordThemeConstant in full detail
                 * @warning Don't use get in production!
                 * @returns resources.KeywordThemeConstant
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_323;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetKeywordThemeConstantRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getKeywordThemeConstant(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_323 = _a.sent();
                                throw this.getGoogleAdsError(err_323);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/KeywordThemeConstantService#suggestkeywordthemeconstants
                 */
                suggestKeywordThemeConstants: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_324;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.suggestKeywordThemeConstants(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_324 = _a.sent();
                                throw this.getGoogleAdsError(err_324);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "keywordViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/KeywordViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("KeywordViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.KeywordView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.KeywordView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_325;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetKeywordViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getKeywordView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_325 = _a.sent();
                                throw this.getGoogleAdsError(err_325);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "landingPageViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/LandingPageViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("LandingPageViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.LandingPageView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.LandingPageView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_326;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetLandingPageViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getLandingPageView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_326 = _a.sent();
                                throw this.getGoogleAdsError(err_326);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "languageConstants", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/LanguageConstantService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("LanguageConstantServiceClient");
            return {
                /**
                 * @description Retrieve a resources.LanguageConstant in full detail
                 * @warning Don't use get in production!
                 * @returns resources.LanguageConstant
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_327;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetLanguageConstantRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getLanguageConstant(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_327 = _a.sent();
                                throw this.getGoogleAdsError(err_327);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "lifeEvents", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/LifeEventService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("LifeEventServiceClient");
            return {
                /**
                 * @description Retrieve a resources.LifeEvent in full detail
                 * @warning Don't use get in production!
                 * @returns resources.LifeEvent
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_328;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetLifeEventRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getLifeEvent(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_328 = _a.sent();
                                throw this.getGoogleAdsError(err_328);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "locationViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/LocationViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("LocationViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.LocationView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.LocationView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_329;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetLocationViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getLocationView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_329 = _a.sent();
                                throw this.getGoogleAdsError(err_329);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "managedPlacementViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ManagedPlacementViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("ManagedPlacementViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.ManagedPlacementView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.ManagedPlacementView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_330;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetManagedPlacementViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getManagedPlacementView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_330 = _a.sent();
                                throw this.getGoogleAdsError(err_330);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "merchantCenterLinks", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/MerchantCenterLinkService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("MerchantCenterLinkServiceClient");
            return {
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/MerchantCenterLinkService#listmerchantcenterlinks
                 */
                listMerchantCenterLinks: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_331;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.listMerchantCenterLinks(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_331 = _a.sent();
                                throw this.getGoogleAdsError(err_331);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description Retrieve a resources.MerchantCenterLink in full detail
                 * @warning Don't use get in production!
                 * @returns resources.MerchantCenterLink
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_332;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetMerchantCenterLinkRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getMerchantCenterLink(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_332 = _a.sent();
                                throw this.getGoogleAdsError(err_332);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description update resources of type resources.IMerchantCenterLink
                 * @returns services.MutateMerchantCenterLinkResponse
                 */
                update: function (merchantCenterLinks, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_197, response, mutationResolution_197, err_333, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("update", merchantCenterLinks
                                // @ts-expect-error Static class type here is fine
                                , index_1.resources.MerchantCenterLink);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "MerchantCenterLinkService.mutateMerchantCenterLink",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_197 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_197.cancelled = true;
                                            mutationCancellation_197.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_197.cancelled) {
                                    return [2 /*return*/, mutationCancellation_197.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateMerchantCenterLink(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_197 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_197.resolved = true;
                                            mutationResolution_197.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_197.resolved) {
                                    return [2 /*return*/, mutationResolution_197.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_333 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_333);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description remove resources of type string
                 * @returns services.MutateMerchantCenterLinkResponse
                 */
                remove: function (merchantCenterLinks, options) { return __awaiter(_this, void 0, void 0, function () {
                    var ops, request, baseHookArguments, mutationCancellation_198, response, mutationResolution_198, err_334, googleAdsError;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                ops = this.buildOperations("remove", merchantCenterLinks);
                                request = this.buildRequest(ops, options);
                                baseHookArguments = {
                                    credentials: this.credentials,
                                    method: "MerchantCenterLinkService.mutateMerchantCenterLink",
                                    mutation: request,
                                    isServiceCall: true,
                                };
                                if (!this.hooks.onMutationStart) return [3 /*break*/, 2];
                                mutationCancellation_198 = { cancelled: false };
                                return [4 /*yield*/, this.hooks.onMutationStart(__assign(__assign({}, baseHookArguments), { cancel: function (res) {
                                            mutationCancellation_198.cancelled = true;
                                            mutationCancellation_198.res = res;
                                        }, editOptions: function (options) {
                                            Object.entries(options).forEach(function (_a) {
                                                var key = _a[0], val = _a[1];
                                                // @ts-expect-error Index with key type is fine
                                                request[key] = val;
                                            });
                                        } }))];
                            case 1:
                                _a.sent();
                                if (mutationCancellation_198.cancelled) {
                                    return [2 /*return*/, mutationCancellation_198.res];
                                }
                                _a.label = 2;
                            case 2:
                                _a.trys.push([2, 6, , 9]);
                                return [4 /*yield*/, service.mutateMerchantCenterLink(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 3:
                                response = (_a.sent())[0];
                                if (!this.hooks.onMutationEnd) return [3 /*break*/, 5];
                                mutationResolution_198 = { resolved: false };
                                return [4 /*yield*/, this.hooks.onMutationEnd(__assign(__assign({}, baseHookArguments), { response: response, resolve: function (res) {
                                            mutationResolution_198.resolved = true;
                                            mutationResolution_198.res = res;
                                        } }))];
                            case 4:
                                _a.sent();
                                if (mutationResolution_198.resolved) {
                                    return [2 /*return*/, mutationResolution_198.res];
                                }
                                _a.label = 5;
                            case 5: return [2 /*return*/, response];
                            case 6:
                                err_334 = _a.sent();
                                googleAdsError = this.getGoogleAdsError(err_334);
                                if (!this.hooks.onMutationError) return [3 /*break*/, 8];
                                return [4 /*yield*/, this.hooks.onMutationError(__assign(__assign({}, baseHookArguments), { error: googleAdsError }))];
                            case 7:
                                _a.sent();
                                _a.label = 8;
                            case 8: throw googleAdsError;
                            case 9: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "mobileAppCategoryConstants", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/MobileAppCategoryConstantService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("MobileAppCategoryConstantServiceClient");
            return {
                /**
                 * @description Retrieve a resources.MobileAppCategoryConstant in full detail
                 * @warning Don't use get in production!
                 * @returns resources.MobileAppCategoryConstant
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_335;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetMobileAppCategoryConstantRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getMobileAppCategoryConstant(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_335 = _a.sent();
                                throw this.getGoogleAdsError(err_335);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "mobileDeviceConstants", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/MobileDeviceConstantService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("MobileDeviceConstantServiceClient");
            return {
                /**
                 * @description Retrieve a resources.MobileDeviceConstant in full detail
                 * @warning Don't use get in production!
                 * @returns resources.MobileDeviceConstant
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_336;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetMobileDeviceConstantRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getMobileDeviceConstant(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_336 = _a.sent();
                                throw this.getGoogleAdsError(err_336);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "offlineUserDataJobs", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/OfflineUserDataJobService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("OfflineUserDataJobServiceClient");
            return {
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/OfflineUserDataJobService#createofflineuserdatajob
                 */
                createOfflineUserDataJob: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_337;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.createOfflineUserDataJob(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_337 = _a.sent();
                                throw this.getGoogleAdsError(err_337);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @description Retrieve a resources.OfflineUserDataJob in full detail
                 * @warning Don't use get in production!
                 * @returns resources.OfflineUserDataJob
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_338;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetOfflineUserDataJobRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getOfflineUserDataJob(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_338 = _a.sent();
                                throw this.getGoogleAdsError(err_338);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/OfflineUserDataJobService#addofflineuserdatajoboperations
                 */
                addOfflineUserDataJobOperations: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_339;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.addOfflineUserDataJobOperations(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_339 = _a.sent();
                                throw this.getGoogleAdsError(err_339);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/OfflineUserDataJobService#runofflineuserdatajob
                 */
                runOfflineUserDataJob: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_340;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.runOfflineUserDataJob(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_340 = _a.sent();
                                throw this.getGoogleAdsError(err_340);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "operatingSystemVersionConstants", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/OperatingSystemVersionConstantService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("OperatingSystemVersionConstantServiceClient");
            return {
                /**
                 * @description Retrieve a resources.OperatingSystemVersionConstant in full detail
                 * @warning Don't use get in production!
                 * @returns resources.OperatingSystemVersionConstant
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_341;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetOperatingSystemVersionConstantRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getOperatingSystemVersionConstant(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_341 = _a.sent();
                                throw this.getGoogleAdsError(err_341);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "paidOrganicSearchTermViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/PaidOrganicSearchTermViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("PaidOrganicSearchTermViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.PaidOrganicSearchTermView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.PaidOrganicSearchTermView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_342;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetPaidOrganicSearchTermViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getPaidOrganicSearchTermView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_342 = _a.sent();
                                throw this.getGoogleAdsError(err_342);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "parentalStatusViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ParentalStatusViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("ParentalStatusViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.ParentalStatusView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.ParentalStatusView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_343;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetParentalStatusViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getParentalStatusView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_343 = _a.sent();
                                throw this.getGoogleAdsError(err_343);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "paymentsAccounts", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/PaymentsAccountService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("PaymentsAccountServiceClient");
            return {
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/PaymentsAccountService#listpaymentsaccounts
                 */
                listPaymentsAccounts: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_344;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.listPaymentsAccounts(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_344 = _a.sent();
                                throw this.getGoogleAdsError(err_344);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "productBiddingCategoryConstants", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ProductBiddingCategoryConstantService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("ProductBiddingCategoryConstantServiceClient");
            return {
                /**
                 * @description Retrieve a resources.ProductBiddingCategoryConstant in full detail
                 * @warning Don't use get in production!
                 * @returns resources.ProductBiddingCategoryConstant
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_345;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetProductBiddingCategoryConstantRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getProductBiddingCategoryConstant(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_345 = _a.sent();
                                throw this.getGoogleAdsError(err_345);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "productGroupViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ProductGroupViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("ProductGroupViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.ProductGroupView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.ProductGroupView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_346;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetProductGroupViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getProductGroupView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_346 = _a.sent();
                                throw this.getGoogleAdsError(err_346);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "reachPlans", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ReachPlanService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("ReachPlanServiceClient");
            return {
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ReachPlanService#listplannablelocations
                 */
                listPlannableLocations: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_347;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.listPlannableLocations(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_347 = _a.sent();
                                throw this.getGoogleAdsError(err_347);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ReachPlanService#listplannableproducts
                 */
                listPlannableProducts: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_348;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.listPlannableProducts(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_348 = _a.sent();
                                throw this.getGoogleAdsError(err_348);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ReachPlanService#generateproductmixideas
                 */
                generateProductMixIdeas: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_349;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.generateProductMixIdeas(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_349 = _a.sent();
                                throw this.getGoogleAdsError(err_349);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ReachPlanService#generatereachforecast
                 */
                generateReachForecast: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_350;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.generateReachForecast(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_350 = _a.sent();
                                throw this.getGoogleAdsError(err_350);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "recommendations", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/RecommendationService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("RecommendationServiceClient");
            return {
                /**
                 * @description Retrieve a resources.Recommendation in full detail
                 * @warning Don't use get in production!
                 * @returns resources.Recommendation
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_351;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetRecommendationRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getRecommendation(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_351 = _a.sent();
                                throw this.getGoogleAdsError(err_351);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/RecommendationService#applyrecommendation
                 */
                applyRecommendation: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_352;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.applyRecommendation(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_352 = _a.sent();
                                throw this.getGoogleAdsError(err_352);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/RecommendationService#dismissrecommendation
                 */
                dismissRecommendation: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_353;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.dismissRecommendation(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_353 = _a.sent();
                                throw this.getGoogleAdsError(err_353);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "searchTermViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/SearchTermViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("SearchTermViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.SearchTermView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.SearchTermView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_354;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetSearchTermViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getSearchTermView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_354 = _a.sent();
                                throw this.getGoogleAdsError(err_354);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "shoppingPerformanceViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ShoppingPerformanceViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("ShoppingPerformanceViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.ShoppingPerformanceView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.ShoppingPerformanceView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_355;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetShoppingPerformanceViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getShoppingPerformanceView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_355 = _a.sent();
                                throw this.getGoogleAdsError(err_355);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "smartCampaignSearchTermViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/SmartCampaignSearchTermViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("SmartCampaignSearchTermViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.SmartCampaignSearchTermView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.SmartCampaignSearchTermView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_356;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetSmartCampaignSearchTermViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getSmartCampaignSearchTermView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_356 = _a.sent();
                                throw this.getGoogleAdsError(err_356);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "smartCampaignSuggests", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/SmartCampaignSuggestService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("SmartCampaignSuggestServiceClient");
            return {
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/SmartCampaignSuggestService#suggestsmartcampaignbudgetoptions
                 */
                suggestSmartCampaignBudgetOptions: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_357;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.suggestSmartCampaignBudgetOptions(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_357 = _a.sent();
                                throw this.getGoogleAdsError(err_357);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/SmartCampaignSuggestService#suggestsmartcampaignad
                 */
                suggestSmartCampaignAd: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_358;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.suggestSmartCampaignAd(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_358 = _a.sent();
                                throw this.getGoogleAdsError(err_358);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/SmartCampaignSuggestService#suggestkeywordthemes
                 */
                suggestKeywordThemes: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_359;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.suggestKeywordThemes(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_359 = _a.sent();
                                throw this.getGoogleAdsError(err_359);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "thirdPartyAppAnalyticsLinks", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ThirdPartyAppAnalyticsLinkService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("ThirdPartyAppAnalyticsLinkServiceClient");
            return {
                /**
                 * @description Retrieve a resources.ThirdPartyAppAnalyticsLink in full detail
                 * @warning Don't use get in production!
                 * @returns resources.ThirdPartyAppAnalyticsLink
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_360;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetThirdPartyAppAnalyticsLinkRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getThirdPartyAppAnalyticsLink(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_360 = _a.sent();
                                throw this.getGoogleAdsError(err_360);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); },
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/ThirdPartyAppAnalyticsLinkService#regenerateshareablelinkid
                 */
                regenerateShareableLinkId: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_361;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.regenerateShareableLinkId(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_361 = _a.sent();
                                throw this.getGoogleAdsError(err_361);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "topicConstants", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/TopicConstantService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("TopicConstantServiceClient");
            return {
                /**
                 * @description Retrieve a resources.TopicConstant in full detail
                 * @warning Don't use get in production!
                 * @returns resources.TopicConstant
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_362;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetTopicConstantRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getTopicConstant(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_362 = _a.sent();
                                throw this.getGoogleAdsError(err_362);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "topicViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/TopicViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("TopicViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.TopicView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.TopicView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_363;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetTopicViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getTopicView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_363 = _a.sent();
                                throw this.getGoogleAdsError(err_363);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "userData", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/UserDataService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("UserDataServiceClient");
            return {
                /**
                 * @link https://developers.google.com/google-ads/api/reference/rpc/v9/UserDataService#uploaduserdata
                 */
                uploadUserData: function (request) { return __awaiter(_this, void 0, void 0, function () {
                    var response, err_364;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, service.uploadUserData(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 1:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 2:
                                err_364 = _a.sent();
                                throw this.getGoogleAdsError(err_364);
                            case 3: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "userInterests", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/UserInterestService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("UserInterestServiceClient");
            return {
                /**
                 * @description Retrieve a resources.UserInterest in full detail
                 * @warning Don't use get in production!
                 * @returns resources.UserInterest
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_365;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetUserInterestRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getUserInterest(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_365 = _a.sent();
                                throw this.getGoogleAdsError(err_365);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "userLocationViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/UserLocationViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("UserLocationViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.UserLocationView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.UserLocationView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_366;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetUserLocationViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getUserLocationView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_366 = _a.sent();
                                throw this.getGoogleAdsError(err_366);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "videos", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/VideoService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("VideoServiceClient");
            return {
                /**
                 * @description Retrieve a resources.Video in full detail
                 * @warning Don't use get in production!
                 * @returns resources.Video
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_367;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetVideoRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getVideo(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_367 = _a.sent();
                                throw this.getGoogleAdsError(err_367);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ServiceFactory.prototype, "webpageViews", {
        /**
         * @link https://developers.google.com/google-ads/api/reference/rpc/v9/WebpageViewService
         */
        get: function () {
            var _this = this;
            var service = this.loadService("WebpageViewServiceClient");
            return {
                /**
                 * @description Retrieve a resources.WebpageView in full detail
                 * @warning Don't use get in production!
                 * @returns resources.WebpageView
                 */
                get: function (resourceName) { return __awaiter(_this, void 0, void 0, function () {
                    var request, response, err_368;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                request = new index_1.services.GetWebpageViewRequest({
                                    resource_name: resourceName,
                                });
                                _a.label = 1;
                            case 1:
                                _a.trys.push([1, 3, , 4]);
                                return [4 /*yield*/, service.getWebpageView(request, {
                                        // @ts-expect-error This arg doesn't exist in the type definitions
                                        otherArgs: {
                                            headers: this.callHeaders,
                                        },
                                    })];
                            case 2:
                                response = (_a.sent())[0];
                                return [2 /*return*/, response];
                            case 3:
                                err_368 = _a.sent();
                                throw this.getGoogleAdsError(err_368);
                            case 4: return [2 /*return*/];
                        }
                    });
                }); }
            };
        },
        enumerable: false,
        configurable: true
    });
    return ServiceFactory;
}(service_1.Service));
exports.default = ServiceFactory;
